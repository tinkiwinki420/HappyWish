{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\React_Node_Sql_Path2-main\\\\React_Node_Sql_Path2-main\\\\fe\\\\src\\\\pages\\\\BusinessProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport ProfilePhotoSection from '../components/ProfilePhotoSection';\nimport PhotoGallerySection from '../components/PhotoGallerySection';\nimport BusinessProfileDetailsForm from '../components/BusinessProfileDetailsForm';\nimport BusinessProfileDetailsDisplay from '../components/BusinessProfileDetailsDisplay';\nimport { handleInputChange } from '../components/InputChangeHandler';\nimport { handleProfilePhotoChange, handleProfilePhotoUpload } from '../components/ProfilePhotoUploadHandler';\nimport { handleSubmit } from '../components/FormSubmitHandler';\nimport { handleLogout } from '../components/LogoutHandler';\nimport { fetchProfile } from '../components/FetchProfileHandler';\nimport '../styles/styles.css';\nimport API_URL from '../constans';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BusinessProfile = () => {\n  _s();\n  const [userDetails, setUserDetails] = useState({});\n  const [editing, setEditing] = useState(false);\n  const [formData, setFormData] = useState({});\n  const [photos, setPhotos] = useState([]);\n  const [newPhotos, setNewPhotos] = useState([]);\n  const [profilePhoto, setProfilePhoto] = useState(null);\n  const [newProfilePhoto, setNewProfilePhoto] = useState(null);\n  const navigate = useNavigate();\n  const userId = localStorage.getItem('userId');\n  const userType = 'business';\n  useEffect(() => {\n    if (!userId) {\n      console.error('No user ID provided');\n      return;\n    }\n    fetchProfile(userId, setUserDetails, setFormData, setProfilePhoto, userType).then(data => setPhotos(data.photos || [])).catch(error => console.error('Error fetching user details:', error));\n  }, [userId]);\n  const handlePhotoUpload = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    for (let i = 0; i < newPhotos.length; i++) {\n      formData.append('photos', newPhotos[i]);\n    }\n    fetch(`${API_URL}/api/profile/business/${userId}/photos`, {\n      method: 'POST',\n      body: formData\n    }).then(response => response.json()).then(data => {\n      alert(data.message);\n      setNewPhotos([]);\n      fetch(`${API_URL}/api/profile/business/${userId}`).then(response => response.json()).then(data => setPhotos(data.photos || []));\n    }).catch(error => console.error('Error uploading photos:', error));\n  };\n  if (!userId) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error: No user ID provided\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n  if (userDetails.error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: userDetails.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Business Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProfilePhotoSection, {\n      profilePhoto: profilePhoto,\n      handleProfilePhotoChange: e => handleProfilePhotoChange(e, setNewProfilePhoto),\n      handleProfilePhotoUpload: e => handleProfilePhotoUpload(e, userId, newProfilePhoto, setProfilePhoto, setNewProfilePhoto, userType)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), editing ? /*#__PURE__*/_jsxDEV(BusinessProfileDetailsForm, {\n      formData: formData,\n      handleInputChange: e => handleInputChange(e, setFormData),\n      handleSubmit: e => handleSubmit(e, userId, formData, setEditing, setUserDetails, userType)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(BusinessProfileDetailsDisplay, {\n      userDetails: userDetails,\n      setEditing: setEditing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PhotoGallerySection, {\n      photos: photos,\n      handlePhotoChange: e => setNewPhotos(e.target.files),\n      handlePhotoUpload: handlePhotoUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleLogout(navigate),\n      className: \"logout-button\",\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(BusinessProfile, \"Yydcr1gSb/hKmEsOJ6kf/Pp4SyQ=\", false, function () {\n  return [useNavigate];\n});\n_c = BusinessProfile;\nexport default BusinessProfile;\nvar _c;\n$RefreshReg$(_c, \"BusinessProfile\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","ProfilePhotoSection","PhotoGallerySection","BusinessProfileDetailsForm","BusinessProfileDetailsDisplay","handleInputChange","handleProfilePhotoChange","handleProfilePhotoUpload","handleSubmit","handleLogout","fetchProfile","API_URL","jsxDEV","_jsxDEV","BusinessProfile","_s","userDetails","setUserDetails","editing","setEditing","formData","setFormData","photos","setPhotos","newPhotos","setNewPhotos","profilePhoto","setProfilePhoto","newProfilePhoto","setNewProfilePhoto","navigate","userId","localStorage","getItem","userType","console","error","then","data","catch","handlePhotoUpload","e","preventDefault","FormData","i","length","append","fetch","method","body","response","json","alert","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","handlePhotoChange","target","files","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Downloads/React_Node_Sql_Path2-main/React_Node_Sql_Path2-main/fe/src/pages/BusinessProfile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport ProfilePhotoSection from '../components/ProfilePhotoSection';\nimport PhotoGallerySection from '../components/PhotoGallerySection';\nimport BusinessProfileDetailsForm from '../components/BusinessProfileDetailsForm';\nimport BusinessProfileDetailsDisplay from '../components/BusinessProfileDetailsDisplay';\nimport { handleInputChange } from '../components/InputChangeHandler';\nimport { handleProfilePhotoChange, handleProfilePhotoUpload } from '../components/ProfilePhotoUploadHandler';\nimport { handleSubmit } from '../components/FormSubmitHandler';\nimport { handleLogout } from '../components/LogoutHandler';\nimport { fetchProfile } from '../components/FetchProfileHandler';\nimport '../styles/styles.css';\nimport API_URL from '../constans';\n\nconst BusinessProfile = () => {\n  const [userDetails, setUserDetails] = useState({});\n  const [editing, setEditing] = useState(false);\n  const [formData, setFormData] = useState({});\n  const [photos, setPhotos] = useState([]);\n  const [newPhotos, setNewPhotos] = useState([]);\n  const [profilePhoto, setProfilePhoto] = useState(null);\n  const [newProfilePhoto, setNewProfilePhoto] = useState(null);\n  const navigate = useNavigate();\n\n  const userId = localStorage.getItem('userId');\n  const userType = 'business';\n\n  useEffect(() => {\n    if (!userId) {\n      console.error('No user ID provided');\n      return;\n    }\n    fetchProfile(userId, setUserDetails, setFormData, setProfilePhoto, userType)\n      .then(data => setPhotos(data.photos || []))\n      .catch(error => console.error('Error fetching user details:', error));\n  }, [userId]);\n\n  const handlePhotoUpload = (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    for (let i = 0; i < newPhotos.length; i++) {\n      formData.append('photos', newPhotos[i]);\n    }\n    fetch(`${API_URL}/api/profile/business/${userId}/photos`, {\n      method: 'POST',\n      body: formData\n    })\n      .then(response => response.json())\n      .then(data => {\n        alert(data.message);\n        setNewPhotos([]);\n        fetch(`${API_URL}/api/profile/business/${userId}`)\n          .then(response => response.json())\n          .then(data => setPhotos(data.photos || []));\n      })\n      .catch(error => console.error('Error uploading photos:', error));\n  };\n\n  if (!userId) {\n    return <p>Error: No user ID provided</p>;\n  }\n\n  if (userDetails.error) {\n    return <p>{userDetails.error}</p>;\n  }\n\n  return (\n    <div className=\"profile-container\">\n      <h1>Business Profile</h1>\n      <ProfilePhotoSection\n        profilePhoto={profilePhoto}\n        handleProfilePhotoChange={(e) => handleProfilePhotoChange(e, setNewProfilePhoto)}\n        handleProfilePhotoUpload={(e) => handleProfilePhotoUpload(e, userId, newProfilePhoto, setProfilePhoto, setNewProfilePhoto, userType)}\n      />\n      {editing ? (\n        <BusinessProfileDetailsForm\n          formData={formData}\n          handleInputChange={(e) => handleInputChange(e, setFormData)}\n          handleSubmit={(e) => handleSubmit(e, userId, formData, setEditing, setUserDetails, userType)}\n        />\n      ) : (\n        <BusinessProfileDetailsDisplay\n          userDetails={userDetails}\n          setEditing={setEditing}\n        />\n      )}\n      <PhotoGallerySection\n        photos={photos}\n        handlePhotoChange={(e) => setNewPhotos(e.target.files)}\n        handlePhotoUpload={handlePhotoUpload}\n      />\n      <button onClick={() => handleLogout(navigate)} className=\"logout-button\">Logout</button>\n    </div>\n  );\n};\n\nexport default BusinessProfile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}