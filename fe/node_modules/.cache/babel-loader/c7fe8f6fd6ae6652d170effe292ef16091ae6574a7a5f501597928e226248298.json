{"ast":null,"code":"export const handleBookingSubmission = (timeSlot, category, numOfPeople, selectedMeal, userId, selectedDate, totalPrice, advancePayment, closeForm, pricePerEvent) => {\n  if (!timeSlot) {\n    alert(\"Please select a time slot before booking.\");\n    return;\n  }\n  const businessId = userId;\n  const remainingBalance = (totalPrice - advancePayment).toFixed(2);\n  let bookingDetails = {\n    business_id: businessId,\n    user_id: localStorage.getItem(\"userId\"),\n    date: selectedDate.toISOString().split(\"T\")[0],\n    time_slot: timeSlot,\n    num_of_people: category === \"Hall\" ? numOfPeople : null,\n    total_price: totalPrice,\n    advance_payment: advancePayment,\n    remaining_balance: remainingBalance\n  };\n  if (category === \"Hall\" && selectedMeal) {\n    const meal_image = selectedMeal ? `/uploads/${selectedMeal.image}` : null;\n    bookingDetails = {\n      ...bookingDetails,\n      meal_name: (selectedMeal === null || selectedMeal === void 0 ? void 0 : selectedMeal.name) || null,\n      meal_price: (selectedMeal === null || selectedMeal === void 0 ? void 0 : selectedMeal.price) || null,\n      meal_image: meal_image || null\n    };\n  }\n  fetch(`/api/profile/business/bookings/regular`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(bookingDetails)\n  }).then(response => response.json()).then(data => {\n    if (data.message === \"Booking created successfully\") {\n      alert(\"Booking successfully created!\");\n      closeForm();\n    } else {\n      alert(data.message);\n    }\n  }).catch(error => {\n    console.error(\"Error storing date selection:\", error.message);\n    alert(\"Error storing date selection. Please try again later.\");\n  });\n};","map":{"version":3,"names":["handleBookingSubmission","timeSlot","category","numOfPeople","selectedMeal","userId","selectedDate","totalPrice","advancePayment","closeForm","pricePerEvent","alert","businessId","remainingBalance","toFixed","bookingDetails","business_id","user_id","localStorage","getItem","date","toISOString","split","time_slot","num_of_people","total_price","advance_payment","remaining_balance","meal_image","image","meal_name","name","meal_price","price","fetch","method","headers","body","JSON","stringify","then","response","json","data","message","catch","error","console"],"sources":["C:/Users/Admin/Downloads/React_Node_Sql_Path2-main/React_Node_Sql_Path2-main/fe/src/components/Dates/handleBookingSubmission.js"],"sourcesContent":["export const handleBookingSubmission = (\n  timeSlot,\n  category,\n  numOfPeople,\n  selectedMeal,\n  userId,\n  selectedDate,\n  totalPrice,\n  advancePayment,\n  closeForm,\n  pricePerEvent\n) => {\n  if (!timeSlot) {\n    alert(\"Please select a time slot before booking.\");\n    return;\n  }\n\n  const businessId = userId;\n  const remainingBalance = (totalPrice - advancePayment).toFixed(2);\n  let bookingDetails = {\n    business_id: businessId,\n    user_id: localStorage.getItem(\"userId\"),\n    date: selectedDate.toISOString().split(\"T\")[0],\n    time_slot: timeSlot,\n    num_of_people: category === \"Hall\" ? numOfPeople : null,\n    total_price: totalPrice,\n    advance_payment: advancePayment,\n    remaining_balance: remainingBalance,\n  };\n\n  if (category === \"Hall\" && selectedMeal) {\n    const meal_image = selectedMeal ? `/uploads/${selectedMeal.image}` : null;\n    bookingDetails = {\n      ...bookingDetails,\n      meal_name: selectedMeal?.name || null,\n      meal_price: selectedMeal?.price || null,\n      meal_image: meal_image || null,\n    };\n  }\n\n  fetch(`/api/profile/business/bookings/regular`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(bookingDetails),\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      if (data.message === \"Booking created successfully\") {\n        alert(\"Booking successfully created!\");\n        closeForm(); \n      } else {\n        alert(data.message);\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error storing date selection:\", error.message);\n      alert(\"Error storing date selection. Please try again later.\");\n    });\n};\n"],"mappings":"AAAA,OAAO,MAAMA,uBAAuB,GAAGA,CACrCC,QAAQ,EACRC,QAAQ,EACRC,WAAW,EACXC,YAAY,EACZC,MAAM,EACNC,YAAY,EACZC,UAAU,EACVC,cAAc,EACdC,SAAS,EACTC,aAAa,KACV;EACH,IAAI,CAACT,QAAQ,EAAE;IACbU,KAAK,CAAC,2CAA2C,CAAC;IAClD;EACF;EAEA,MAAMC,UAAU,GAAGP,MAAM;EACzB,MAAMQ,gBAAgB,GAAG,CAACN,UAAU,GAAGC,cAAc,EAAEM,OAAO,CAAC,CAAC,CAAC;EACjE,IAAIC,cAAc,GAAG;IACnBC,WAAW,EAAEJ,UAAU;IACvBK,OAAO,EAAEC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IACvCC,IAAI,EAAEd,YAAY,CAACe,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9CC,SAAS,EAAEtB,QAAQ;IACnBuB,aAAa,EAAEtB,QAAQ,KAAK,MAAM,GAAGC,WAAW,GAAG,IAAI;IACvDsB,WAAW,EAAElB,UAAU;IACvBmB,eAAe,EAAElB,cAAc;IAC/BmB,iBAAiB,EAAEd;EACrB,CAAC;EAED,IAAIX,QAAQ,KAAK,MAAM,IAAIE,YAAY,EAAE;IACvC,MAAMwB,UAAU,GAAGxB,YAAY,GAAI,YAAWA,YAAY,CAACyB,KAAM,EAAC,GAAG,IAAI;IACzEd,cAAc,GAAG;MACf,GAAGA,cAAc;MACjBe,SAAS,EAAE,CAAA1B,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAE2B,IAAI,KAAI,IAAI;MACrCC,UAAU,EAAE,CAAA5B,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAE6B,KAAK,KAAI,IAAI;MACvCL,UAAU,EAAEA,UAAU,IAAI;IAC5B,CAAC;EACH;EAEAM,KAAK,CAAE,wCAAuC,EAAE;IAC9CC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACxB,cAAc;EACrC,CAAC,CAAC,CACCyB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;IACd,IAAIA,IAAI,CAACC,OAAO,KAAK,8BAA8B,EAAE;MACnDjC,KAAK,CAAC,+BAA+B,CAAC;MACtCF,SAAS,CAAC,CAAC;IACb,CAAC,MAAM;MACLE,KAAK,CAACgC,IAAI,CAACC,OAAO,CAAC;IACrB;EACF,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACF,OAAO,CAAC;IAC7DjC,KAAK,CAAC,uDAAuD,CAAC;EAChE,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}