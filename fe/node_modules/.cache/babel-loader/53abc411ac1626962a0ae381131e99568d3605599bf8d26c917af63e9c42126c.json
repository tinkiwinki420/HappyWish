{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\React_Node_Sql_Path2-main\\\\React_Node_Sql_Path2-main\\\\fe\\\\src\\\\components\\\\Dates.js\",\n  _s = $RefreshSig$();\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport { useParams } from \"react-router-dom\";\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nimport \"../styles/Dates.css\";\nimport NavbarBooking from \"./NavbarBooking\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\n\n// Modal Component for displaying meal selection\nconst Modal = ({\n  isOpen,\n  onClose,\n  children\n}) => {\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"modal-close\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = Modal;\nconst Dates = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [category, setCategory] = useState(\"\");\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [showMealsSelection, setShowMealsSelection] = useState(false);\n  const [bookingStatus, setBookingStatus] = useState([]);\n  const [userType, setUserType] = useState(null);\n  const [numOfPeople, setNumOfPeople] = useState(\"\");\n  const [hallCapacity, setHallCapacity] = useState(null);\n  const [minGuests, setMinGuests] = useState(null);\n  const [exclusiveMeal, setExclusiveMeal] = useState(null);\n  const [regularMeals, setRegularMeals] = useState([]);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [pricePerEvent, setPricePerEvent] = useState(0);\n  const [advancePayment, setAdvancePayment] = useState(0);\n  const [selectedMeal, setSelectedMeal] = useState(null);\n  const [profit, setProfit] = useState(0); // Initialize profit\n  const [useNewPayPalButton, setUseNewPayPalButton] = useState(true);\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    idNum: \"\",\n    phoneNumber: \"\",\n    email: \"\",\n    num_of_people: 0,\n    totalPrice: 0,\n    priceRemaining: 0,\n    paid: 0\n  });\n  useEffect(() => {\n    const fetchUserType = () => {\n      const storedUserType = localStorage.getItem(\"userType\");\n      setUserType(storedUserType);\n    };\n    const fetchCategory = async () => {\n      try {\n        const response = await fetch(`/api/profile/business/${userId}/category`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setCategory(data.category || \"\");\n      } catch (error) {\n        console.error(\"Error fetching category:\", error.message);\n        alert(\"Error fetching category. Please try again later.\");\n      }\n    };\n    const fetchHallDetails = async () => {\n      try {\n        const response = await fetch(`/api/bookings/business/${userId}/capacity`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setHallCapacity(data.hallCapacity || 0);\n        setMinGuests(data.minGuests || 0);\n        setPricePerEvent(data.price_per_event || 0);\n        setTotalPrice(data.price_per_event || 0);\n      } catch (error) {\n        console.error(\"Error fetching hall details:\", error.message);\n        alert(\"Error fetching hall details. Please try again later.\");\n      }\n    };\n    fetchUserType();\n    fetchCategory();\n    fetchHallDetails();\n    const fetchBookedDates = async () => {\n      try {\n        const response = await fetch(`/api/profile/business/bookings/${userId}/booked-dates`);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch booked dates\");\n        }\n        const data = await response.json();\n        const formattedEvents = data.bookedDates.map(event => ({\n          start: new Date(event.booking_date),\n          end: new Date(event.booking_date),\n          title: `Booked: ${event.time_slot}`,\n          className: event.time_slot === \"day\" ? \"rbc-event-day\" : \"rbc-event-night\"\n        }));\n        setEvents(formattedEvents);\n      } catch (error) {\n        console.error(\"Error fetching booked dates:\", error.message);\n        alert(\"Error fetching booked dates. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchBookedDates();\n  }, [userId]);\n  useEffect(() => {\n    if (userId) {\n      fetch(`/api/meals/regular/user/${userId}`).then(response => response.json()).then(data => {\n        setRegularMeals(data);\n      }).catch(error => {\n        console.error(\"Error fetching regular meals:\", error.message);\n        alert(\"Error fetching regular meals. Please try again later.\");\n      });\n      fetch(`/api/meals/exclusive/user/${userId}`).then(response => response.json()).then(data => {\n        setExclusiveMeal(data[0]);\n      }).catch(error => {\n        console.error(\"Error fetching exclusive meal:\", error.message);\n        alert(\"Error fetching exclusive meal. Please try again later.\");\n      });\n    }\n  }, [userId]);\n  const handleSelectSlot = ({\n    start\n  }) => {\n    const now = new Date();\n    if (userType === \"business\") {\n      alert(\"Business users cannot book dates.\");\n      return;\n    }\n    if (!userType) {\n      alert(\"You have to sign in first to book a date!\");\n      return;\n    }\n    if (start <= now) {\n      alert(\"Please select a future date.\");\n      return;\n    }\n    setSelectedDate(start);\n    const selectedDateString = start.toISOString().split(\"T\")[0];\n    fetch(`/api/profile/business/bookings/check/${userId}/${selectedDateString}`).then(response => response.json()).then(data => {\n      if (!Array.isArray(data.bookedSlots)) {\n        console.error(\"Invalid response:\", data);\n        return;\n      }\n      setBookingStatus(data.bookedSlots);\n      const dayBooking = data.bookedSlots.some(booking => booking.time_slot === \"day\");\n      const nightBooking = data.bookedSlots.some(booking => booking.time_slot === \"night\");\n      if (dayBooking && nightBooking) {\n        alert(\"This date is fully booked.\");\n      } else {\n        setShowModal(true);\n      }\n    }).catch(error => {\n      console.error(\"Error checking booking status:\", error.message);\n      alert(\"Error checking booking status. Please try again later.\");\n    });\n  };\n  const closeForm = () => {\n    setSelectedMeal(null); // Reset meal selection\n    setTotalPrice(pricePerEvent); // Reset price to just the event price if applicable\n    setSelectedDate(null); // Reset selected date\n    setSelectedTimeSlot(null); // Reset selected time slot\n    setNumOfPeople(0); // Reset number of people\n    setFormData({\n      firstName: \"\",\n      lastName: \"\",\n      idNum: \"\",\n      phoneNumber: \"\",\n      email: \"\",\n      num_of_people: 0,\n      totalPrice: 0,\n      priceRemaining: 0,\n      paid: 0\n    });\n    setShowModal(false);\n    setShowMealsSelection(false); // Close the meal selection modal if it's open\n  };\n  const handleMealSelection = meal => {\n    if (selectedMeal && selectedMeal.id === meal.id) {\n      // If the selected meal is clicked again, unselect it\n      setSelectedMeal(null);\n      setTotalPrice(pricePerEvent);\n      setAdvancePayment(pricePerEvent * 0.05); // Reset to just the event price without the meal\n    } else {\n      // Select the meal and update the total price\n      setSelectedMeal(meal);\n      calculateTotalPrice(meal.price);\n    }\n  };\n  const calculateTotalPrice = (mealPrice = 0) => {\n    const total = category === \"Hall\" ? mealPrice * numOfPeople + pricePerEvent : pricePerEvent;\n    setTotalPrice(total);\n    setAdvancePayment((total * 0.05).toFixed(2)); // Calculate 5% advance payment\n    setProfit((total * 0.05).toFixed(2)); // Calculate 5% profit and update the state\n  };\n  const handleTimeSelection = time => {\n    setSelectedTimeSlot(time);\n    if (category === \"Hall\") {\n      if (!numOfPeople || numOfPeople < minGuests || numOfPeople > hallCapacity) {\n        alert(`The number of people must be between ${minGuests} and ${hallCapacity}.`);\n        return;\n      }\n      setShowModal(false);\n      setShowMealsSelection(true);\n    } else {\n      setTotalPrice(pricePerEvent); // Set total price for non-Hall categories\n      setShowModal(false);\n      handleBooking(time); // Ensure the time slot is sent directly\n    }\n  };\n  const handleBooking = (timeSlot, skipMeal = false) => {\n    if (!timeSlot) {\n      alert(\"Please select a time slot before booking.\");\n      return;\n    }\n    const businessId = userId;\n    const remainingBalance = (totalPrice - advancePayment).toFixed(2);\n    let bookingDetails = {\n      business_id: businessId,\n      user_id: localStorage.getItem(\"userId\"),\n      date: selectedDate.toISOString().split(\"T\")[0],\n      time_slot: timeSlot,\n      num_of_people: category === \"Hall\" ? numOfPeople : null,\n      total_price: totalPrice,\n      advance_payment: advancePayment,\n      remaining_balance: remainingBalance\n    };\n    if (category === \"Hall\" && !skipMeal) {\n      const meal_image = selectedMeal ? `/uploads/${selectedMeal.image}` : null;\n      bookingDetails = {\n        ...bookingDetails,\n        meal_name: (selectedMeal === null || selectedMeal === void 0 ? void 0 : selectedMeal.name) || null,\n        meal_price: (selectedMeal === null || selectedMeal === void 0 ? void 0 : selectedMeal.price) || null,\n        meal_image: meal_image || null\n      };\n    }\n\n    // Step 1: Create PayPal Order\n    fetch(`/api/paypal/create-paypal-order`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        totalPrice\n      })\n    }).then(response => response.json()).then(data => {\n      const orderID = data.id;\n\n      // Step 2: Render PayPal Button and Capture Order\n      window.paypal.Buttons({\n        createOrder: function () {\n          return orderID;\n        },\n        onApprove: function (data, actions) {\n          return actions.order.capture().then(function (details) {\n            // Payment successful, complete the booking\n            alert(\"Transaction completed by \" + details.payer.name.given_name);\n\n            // Capture the payment\n            fetch(`/api/paypal/capture-paypal-order`, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                orderID: data.orderID\n              })\n            }).then(res => res.json()).then(data => {\n              console.log(\"Payment captured:\", data);\n              // Proceed with the booking process\n              fetch(`/api/profile/business/bookings/regular`, {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(bookingDetails)\n              }).then(response => response.json()).then(data => {\n                if (data.message === \"Booking created successfully\") {\n                  alert(\"Booking successfully created!\");\n                  closeForm(); // Reset the form after booking\n                } else {\n                  alert(data.message);\n                }\n              }).catch(error => {\n                console.error(\"Error storing date selection:\", error.message);\n                alert(\"Error storing date selection. Please try again later.\");\n              });\n            }).catch(err => {\n              console.error(\"Error capturing payment:\", err);\n            });\n          });\n        },\n        onError: function (err) {\n          console.error(\"PayPal error:\", err);\n          alert(\"Something went wrong with the payment. Please try again.\");\n        }\n      }).render(\"#paypal-button-container\"); // Replace with the actual container ID\n    }).catch(error => {\n      console.error(\"Error creating PayPal order:\", error.message);\n      alert(\"Error creating PayPal order. Please try again later.\");\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 12\n    }, this);\n  }\n  const dayBooking = bookingStatus.some(booking => booking.time_slot === \"day\");\n  const nightBooking = bookingStatus.some(booking => booking.time_slot === \"night\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dates\",\n    children: [/*#__PURE__*/_jsxDEV(NavbarBooking, {\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Booked Dates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: events,\n      selectable: true,\n      onSelectSlot: handleSelectSlot,\n      defaultView: \"month\",\n      views: [\"month\", \"agenda\"],\n      style: {\n        height: 500\n      },\n      components: {\n        toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rbc-toolbar\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"rbc-btn-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => props.onNavigate(\"PREV\"),\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => props.onNavigate(\"TODAY\"),\n              children: \"Today\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => props.onNavigate(\"NEXT\"),\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Select Time Slot for \", moment(selectedDate).format(\"MMMM Do YYYY\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this), category === \"Hall\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Number of People:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: numOfPeople,\n            onChange: e => setNumOfPeople(e.target.value),\n            min: minGuests || 1,\n            max: hallCapacity || 1,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 15\n        }, this), !dayBooking && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTimeSelection(\"day\"),\n          children: \"Book Day Slot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 15\n        }, this), !nightBooking && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTimeSelection(\"night\"),\n          children: \"Book Night Slot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Price per Event: $\", pricePerEvent]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showMealsSelection,\n      onClose: () => setShowMealsSelection(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select a Meal for Your Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meals-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meals-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Exclusive Meals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: exclusiveMeal && /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `meal-option ${(selectedMeal === null || selectedMeal === void 0 ? void 0 : selectedMeal.id) === exclusiveMeal.id ? \"selected\" : \"\"}`,\n              onClick: () => handleMealSelection(exclusiveMeal),\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"meal\",\n                value: exclusiveMeal.id,\n                checked: (selectedMeal === null || selectedMeal === void 0 ? void 0 : selectedMeal.id) === exclusiveMeal.id,\n                onChange: () => handleMealSelection(exclusiveMeal)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 19\n              }, this), exclusiveMeal.name, \" - $\", exclusiveMeal.price, /*#__PURE__*/_jsxDEV(\"img\", {\n                src: exclusiveMeal.image,\n                alt: exclusiveMeal.name,\n                className: \"meal-photo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 19\n              }, this)]\n            }, exclusiveMeal.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Regular Meals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: regularMeals.map(meal => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `meal-option ${(selectedMeal === null || selectedMeal === void 0 ? void 0 : selectedMeal.id) === meal.id ? \"selected\" : \"\"}`,\n              onClick: () => handleMealSelection(meal),\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"meal\",\n                value: meal.id,\n                checked: (selectedMeal === null || selectedMeal === void 0 ? void 0 : selectedMeal.id) === meal.id,\n                onChange: () => handleMealSelection(meal)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 19\n              }, this), meal.name, \" - $\", meal.price, /*#__PURE__*/_jsxDEV(\"img\", {\n                src: meal.image,\n                alt: meal.name,\n                className: \"meal-photo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 19\n              }, this)]\n            }, meal.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Total Price: $\", totalPrice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Advance Payment (5%): $\", advancePayment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"paypal-button-container\",\n        children: useNewPayPalButton ? /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n          options: {\n            \"client-id\": \"YOUR_PAYPAL_CLIENT_ID\"\n          },\n          children: /*#__PURE__*/_jsxDEV(PayPalButtons, {\n            amount: profit // Use the profit instead of totalPrice\n            ,\n            onSuccess: (details, data) => {\n              alert(\"Transaction completed by \" + details.payer.name.given_name);\n              handleBooking(selectedTimeSlot);\n            },\n            options: {\n              clientId: \"YOUR_PAYPAL_CLIENT_ID\",\n              // Replace with your actual PayPal client ID\n              currency: \"USD\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(PayPalButton, {\n          amount: profit // Use the profit instead of totalPrice\n          ,\n          onSuccess: (details, data) => {\n            alert(\"Transaction completed by \" + details.payer.name.given_name);\n            handleBooking(selectedTimeSlot);\n          },\n          options: {\n            clientId: \"YOUR_PAYPAL_CLIENT_ID\",\n            // Replace with your actual PayPal client ID\n            currency: \"USD\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: closeForm,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 389,\n    columnNumber: 5\n  }, this);\n};\n_s(Dates, \"PZueC6vsFqkxLzaRZqf1DJqg658=\", false, function () {\n  return [useParams];\n});\n_c2 = Dates;\nexport default Dates;\nvar _c, _c2;\n$RefreshReg$(_c, \"Modal\");\n$RefreshReg$(_c2, \"Dates\");","map":{"version":3,"names":["moment","React","useEffect","useState","Calendar","momentLocalizer","PayPalButton","useParams","PayPalScriptProvider","PayPalButtons","NavbarBooking","jsxDEV","_jsxDEV","localizer","Modal","isOpen","onClose","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","Dates","_s","userId","category","setCategory","events","setEvents","loading","setLoading","selectedDate","setSelectedDate","selectedTimeSlot","setSelectedTimeSlot","showModal","setShowModal","showMealsSelection","setShowMealsSelection","bookingStatus","setBookingStatus","userType","setUserType","numOfPeople","setNumOfPeople","hallCapacity","setHallCapacity","minGuests","setMinGuests","exclusiveMeal","setExclusiveMeal","regularMeals","setRegularMeals","totalPrice","setTotalPrice","pricePerEvent","setPricePerEvent","advancePayment","setAdvancePayment","selectedMeal","setSelectedMeal","profit","setProfit","useNewPayPalButton","setUseNewPayPalButton","formData","setFormData","firstName","lastName","idNum","phoneNumber","email","num_of_people","priceRemaining","paid","fetchUserType","storedUserType","localStorage","getItem","fetchCategory","response","fetch","ok","Error","status","data","json","error","console","message","alert","fetchHallDetails","price_per_event","fetchBookedDates","formattedEvents","bookedDates","map","event","start","Date","booking_date","end","title","time_slot","then","catch","handleSelectSlot","now","selectedDateString","toISOString","split","Array","isArray","bookedSlots","dayBooking","some","booking","nightBooking","closeForm","handleMealSelection","meal","id","calculateTotalPrice","price","mealPrice","total","toFixed","handleTimeSelection","time","handleBooking","timeSlot","skipMeal","businessId","remainingBalance","bookingDetails","business_id","user_id","date","total_price","advance_payment","remaining_balance","meal_image","image","meal_name","name","meal_price","method","headers","body","JSON","stringify","orderID","window","paypal","Buttons","createOrder","onApprove","actions","order","capture","details","payer","given_name","res","log","err","onError","render","selectable","onSelectSlot","defaultView","views","style","height","components","toolbar","props","type","onNavigate","format","value","onChange","e","target","min","max","required","checked","src","alt","options","amount","onSuccess","clientId","currency","_c2","$RefreshReg$"],"sources":["C:/Users/Admin/Downloads/React_Node_Sql_Path2-main/React_Node_Sql_Path2-main/fe/src/components/Dates.js"],"sourcesContent":["import moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport { useParams } from \"react-router-dom\";\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";  \nimport \"../styles/Dates.css\";\nimport NavbarBooking from \"./NavbarBooking\";\n\nconst localizer = momentLocalizer(moment);\n\n// Modal Component for displaying meal selection\nconst Modal = ({ isOpen, onClose, children }) => {\n  if (!isOpen) return null;\n\n  return (\n    <div className='modal-overlay'>\n      <div className='modal-content'>\n        <button onClick={onClose} className='modal-close'>\n          Close\n        </button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nconst Dates = () => {\n  const { userId } = useParams();\n  const [category, setCategory] = useState(\"\");\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [showMealsSelection, setShowMealsSelection] = useState(false);\n  const [bookingStatus, setBookingStatus] = useState([]);\n  const [userType, setUserType] = useState(null);\n  const [numOfPeople, setNumOfPeople] = useState(\"\");\n  const [hallCapacity, setHallCapacity] = useState(null);\n  const [minGuests, setMinGuests] = useState(null);\n  const [exclusiveMeal, setExclusiveMeal] = useState(null);\n  const [regularMeals, setRegularMeals] = useState([]);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [pricePerEvent, setPricePerEvent] = useState(0);\n  const [advancePayment, setAdvancePayment] = useState(0);\n  const [selectedMeal, setSelectedMeal] = useState(null);\n  const [profit, setProfit] = useState(0); // Initialize profit\n  const [useNewPayPalButton, setUseNewPayPalButton] = useState(true);\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    idNum: \"\",\n    phoneNumber: \"\",\n    email: \"\",\n    num_of_people: 0,\n    totalPrice: 0,\n    priceRemaining: 0,\n    paid: 0,\n  });\n\n  useEffect(() => {\n    const fetchUserType = () => {\n      const storedUserType = localStorage.getItem(\"userType\");\n      setUserType(storedUserType);\n    };\n\n    const fetchCategory = async () => {\n      try {\n        const response = await fetch(\n          `/api/profile/business/${userId}/category`\n        );\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setCategory(data.category || \"\");\n      } catch (error) {\n        console.error(\"Error fetching category:\", error.message);\n        alert(\"Error fetching category. Please try again later.\");\n      }\n    };\n\n    const fetchHallDetails = async () => {\n      try {\n        const response = await fetch(\n          `/api/bookings/business/${userId}/capacity`\n        );\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setHallCapacity(data.hallCapacity || 0);\n        setMinGuests(data.minGuests || 0);\n        setPricePerEvent(data.price_per_event || 0);\n        setTotalPrice(data.price_per_event || 0);\n      } catch (error) {\n        console.error(\"Error fetching hall details:\", error.message);\n        alert(\"Error fetching hall details. Please try again later.\");\n      }\n    };\n\n    fetchUserType();\n    fetchCategory();\n    fetchHallDetails();\n\n    const fetchBookedDates = async () => {\n      try {\n        const response = await fetch(\n          `/api/profile/business/bookings/${userId}/booked-dates`\n        );\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch booked dates\");\n        }\n        const data = await response.json();\n        const formattedEvents = data.bookedDates.map((event) => ({\n          start: new Date(event.booking_date),\n          end: new Date(event.booking_date),\n          title: `Booked: ${event.time_slot}`,\n          className:\n            event.time_slot === \"day\" ? \"rbc-event-day\" : \"rbc-event-night\",\n        }));\n        setEvents(formattedEvents);\n      } catch (error) {\n        console.error(\"Error fetching booked dates:\", error.message);\n        alert(\"Error fetching booked dates. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchBookedDates();\n  }, [userId]);\n\n  useEffect(() => {\n    if (userId) {\n      fetch(`/api/meals/regular/user/${userId}`)\n        .then((response) => response.json())\n        .then((data) => {\n          setRegularMeals(data);\n        })\n        .catch((error) => {\n          console.error(\"Error fetching regular meals:\", error.message);\n          alert(\"Error fetching regular meals. Please try again later.\");\n        });\n\n      fetch(`/api/meals/exclusive/user/${userId}`)\n        .then((response) => response.json())\n        .then((data) => {\n          setExclusiveMeal(data[0]);\n        })\n        .catch((error) => {\n          console.error(\"Error fetching exclusive meal:\", error.message);\n          alert(\"Error fetching exclusive meal. Please try again later.\");\n        });\n    }\n  }, [userId]);\n\n  const handleSelectSlot = ({ start }) => {\n    const now = new Date();\n    if (userType === \"business\") {\n      alert(\"Business users cannot book dates.\");\n      return;\n    }\n    if (!userType) {\n      alert(\"You have to sign in first to book a date!\");\n      return;\n    }\n    if (start <= now) {\n      alert(\"Please select a future date.\");\n      return;\n    }\n    setSelectedDate(start);\n    const selectedDateString = start.toISOString().split(\"T\")[0];\n\n    fetch(\n      `/api/profile/business/bookings/check/${userId}/${selectedDateString}`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        if (!Array.isArray(data.bookedSlots)) {\n          console.error(\"Invalid response:\", data);\n          return;\n        }\n        setBookingStatus(data.bookedSlots);\n        const dayBooking = data.bookedSlots.some(\n          (booking) => booking.time_slot === \"day\"\n        );\n        const nightBooking = data.bookedSlots.some(\n          (booking) => booking.time_slot === \"night\"\n        );\n\n        if (dayBooking && nightBooking) {\n          alert(\"This date is fully booked.\");\n        } else {\n          setShowModal(true);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error checking booking status:\", error.message);\n        alert(\"Error checking booking status. Please try again later.\");\n      });\n  };\n\n  const closeForm = () => {\n    setSelectedMeal(null); // Reset meal selection\n    setTotalPrice(pricePerEvent); // Reset price to just the event price if applicable\n    setSelectedDate(null); // Reset selected date\n    setSelectedTimeSlot(null); // Reset selected time slot\n    setNumOfPeople(0); // Reset number of people\n    setFormData({\n      firstName: \"\",\n      lastName: \"\",\n      idNum: \"\",\n      phoneNumber: \"\",\n      email: \"\",\n      num_of_people: 0,\n      totalPrice: 0,\n      priceRemaining: 0,\n      paid: 0,\n    });\n    setShowModal(false);\n    setShowMealsSelection(false); // Close the meal selection modal if it's open\n  };\n\n  const handleMealSelection = (meal) => {\n    if (selectedMeal && selectedMeal.id === meal.id) {\n      // If the selected meal is clicked again, unselect it\n      setSelectedMeal(null);\n      setTotalPrice(pricePerEvent);\n      setAdvancePayment(pricePerEvent * 0.05); // Reset to just the event price without the meal\n    } else {\n      // Select the meal and update the total price\n      setSelectedMeal(meal);\n      calculateTotalPrice(meal.price);\n    }\n  };\n\n  const calculateTotalPrice = (mealPrice = 0) => {\n    const total =\n      category === \"Hall\"\n        ? mealPrice * numOfPeople + pricePerEvent\n        : pricePerEvent;\n    setTotalPrice(total);\n    setAdvancePayment((total * 0.05).toFixed(2)); // Calculate 5% advance payment\n    setProfit((total * 0.05).toFixed(2)); // Calculate 5% profit and update the state\n  };\n\n  const handleTimeSelection = (time) => {\n    setSelectedTimeSlot(time);\n    if (category === \"Hall\") {\n      if (\n        !numOfPeople ||\n        numOfPeople < minGuests ||\n        numOfPeople > hallCapacity\n      ) {\n        alert(\n          `The number of people must be between ${minGuests} and ${hallCapacity}.`\n        );\n        return;\n      }\n      setShowModal(false);\n      setShowMealsSelection(true);\n    } else {\n      setTotalPrice(pricePerEvent); // Set total price for non-Hall categories\n      setShowModal(false);\n      handleBooking(time); // Ensure the time slot is sent directly\n    }\n  };\n\n  const handleBooking = (timeSlot, skipMeal = false) => {\n    if (!timeSlot) {\n      alert(\"Please select a time slot before booking.\");\n      return;\n    }\n\n    const businessId = userId;\n    const remainingBalance = (totalPrice - advancePayment).toFixed(2);\n    let bookingDetails = {\n      business_id: businessId,\n      user_id: localStorage.getItem(\"userId\"),\n      date: selectedDate.toISOString().split(\"T\")[0],\n      time_slot: timeSlot,\n      num_of_people: category === \"Hall\" ? numOfPeople : null,\n      total_price: totalPrice,\n      advance_payment: advancePayment,\n      remaining_balance: remainingBalance,\n    };\n\n    if (category === \"Hall\" && !skipMeal) {\n      const meal_image = selectedMeal ? `/uploads/${selectedMeal.image}` : null;\n\n      bookingDetails = {\n        ...bookingDetails,\n        meal_name: selectedMeal?.name || null,\n        meal_price: selectedMeal?.price || null,\n        meal_image: meal_image || null,\n      };\n    }\n\n    // Step 1: Create PayPal Order\n    fetch(`/api/paypal/create-paypal-order`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ totalPrice }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        const orderID = data.id;\n\n        // Step 2: Render PayPal Button and Capture Order\n        window.paypal\n          .Buttons({\n            createOrder: function () {\n              return orderID;\n            },\n            onApprove: function (data, actions) {\n              return actions.order.capture().then(function (details) {\n                // Payment successful, complete the booking\n                alert(\n                  \"Transaction completed by \" + details.payer.name.given_name\n                );\n\n                // Capture the payment\n                fetch(`/api/paypal/capture-paypal-order`, {\n                  method: \"POST\",\n                  headers: { \"Content-Type\": \"application/json\" },\n                  body: JSON.stringify({ orderID: data.orderID }),\n                })\n                  .then((res) => res.json())\n                  .then((data) => {\n                    console.log(\"Payment captured:\", data);\n                    // Proceed with the booking process\n                    fetch(`/api/profile/business/bookings/regular`, {\n                      method: \"POST\",\n                      headers: { \"Content-Type\": \"application/json\" },\n                      body: JSON.stringify(bookingDetails),\n                    })\n                      .then((response) => response.json())\n                      .then((data) => {\n                        if (data.message === \"Booking created successfully\") {\n                          alert(\"Booking successfully created!\");\n                          closeForm(); // Reset the form after booking\n                        } else {\n                          alert(data.message);\n                        }\n                      })\n                      .catch((error) => {\n                        console.error(\n                          \"Error storing date selection:\",\n                          error.message\n                        );\n                        alert(\n                          \"Error storing date selection. Please try again later.\"\n                        );\n                      });\n                  })\n                  .catch((err) => {\n                    console.error(\"Error capturing payment:\", err);\n                  });\n              });\n            },\n            onError: function (err) {\n              console.error(\"PayPal error:\", err);\n              alert(\"Something went wrong with the payment. Please try again.\");\n            },\n          })\n          .render(\"#paypal-button-container\"); // Replace with the actual container ID\n      })\n      .catch((error) => {\n        console.error(\"Error creating PayPal order:\", error.message);\n        alert(\"Error creating PayPal order. Please try again later.\");\n      });\n  };\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  const dayBooking = bookingStatus.some(\n    (booking) => booking.time_slot === \"day\"\n  );\n  const nightBooking = bookingStatus.some(\n    (booking) => booking.time_slot === \"night\"\n  );\n\n  return (\n    <div className='dates'>\n      <NavbarBooking userId={userId} />\n      <h2>Booked Dates</h2>\n      <Calendar\n        localizer={localizer}\n        events={events}\n        selectable\n        onSelectSlot={handleSelectSlot}\n        defaultView='month'\n        views={[\"month\", \"agenda\"]}\n        style={{ height: 500 }}\n        components={{\n          toolbar: (props) => (\n            <div className='rbc-toolbar'>\n              <span className='rbc-btn-group'>\n                <button type='button' onClick={() => props.onNavigate(\"PREV\")}>\n                  Back\n                </button>\n                <button type='button' onClick={() => props.onNavigate(\"TODAY\")}>\n                  Today\n                </button>\n                <button type='button' onClick={() => props.onNavigate(\"NEXT\")}>\n                  Next\n                </button>\n              </span>\n            </div>\n          ),\n        }}\n      />\n      {showModal && (\n        <div className='modal'>\n          <div className='modal-content'>\n            <h3>\n              Select Time Slot for {moment(selectedDate).format(\"MMMM Do YYYY\")}\n            </h3>\n            {category === \"Hall\" && (\n              <div>\n                <label>Number of People:</label>\n                <input\n                  type='number'\n                  value={numOfPeople}\n                  onChange={(e) => setNumOfPeople(e.target.value)}\n                  min={minGuests || 1}\n                  max={hallCapacity || 1}\n                  required\n                />\n              </div>\n            )}\n            {!dayBooking && (\n              <button onClick={() => handleTimeSelection(\"day\")}>\n                Book Day Slot\n              </button>\n            )}\n            {!nightBooking && (\n              <button onClick={() => handleTimeSelection(\"night\")}>\n                Book Night Slot\n              </button>\n            )}\n            <h4>Price per Event: ${pricePerEvent}</h4>\n            <button onClick={() => setShowModal(false)}>Cancel</button>\n          </div>\n        </div>\n      )}\n\n      <Modal\n        isOpen={showMealsSelection}\n        onClose={() => setShowMealsSelection(false)}\n      >\n        <h3>Select a Meal for Your Event</h3>\n        <div className='meals-container'>\n          <div className='meals-container'>\n            <h4>Exclusive Meals</h4>\n            <ul>\n              {exclusiveMeal && (\n                <li\n                  key={exclusiveMeal.id}\n                  className={`meal-option ${\n                    selectedMeal?.id === exclusiveMeal.id ? \"selected\" : \"\"\n                  }`}\n                  onClick={() => handleMealSelection(exclusiveMeal)}\n                >\n                  <input\n                    type='radio'\n                    name='meal'\n                    value={exclusiveMeal.id}\n                    checked={selectedMeal?.id === exclusiveMeal.id}\n                    onChange={() => handleMealSelection(exclusiveMeal)}\n                  />\n                  {exclusiveMeal.name} - ${exclusiveMeal.price}\n                  <img\n                    src={exclusiveMeal.image}\n                    alt={exclusiveMeal.name}\n                    className='meal-photo'\n                  />\n                </li>\n              )}\n            </ul>\n\n            <h4>Regular Meals</h4>\n            <ul>\n              {regularMeals.map((meal) => (\n                <li\n                  key={meal.id}\n                  className={`meal-option ${\n                    selectedMeal?.id === meal.id ? \"selected\" : \"\"\n                  }`}\n                  onClick={() => handleMealSelection(meal)}\n                >\n                  <input\n                    type='radio'\n                    name='meal'\n                    value={meal.id}\n                    checked={selectedMeal?.id === meal.id}\n                    onChange={() => handleMealSelection(meal)}\n                  />\n                  {meal.name} - ${meal.price}\n                  <img\n                    src={meal.image}\n                    alt={meal.name}\n                    className='meal-photo'\n                  />\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n        <h4>Total Price: ${totalPrice}</h4>\n        <h4>Advance Payment (5%): ${advancePayment}</h4>\n        <div id='paypal-button-container'>\n          {useNewPayPalButton ? (\n            <PayPalScriptProvider\n              options={{ \"client-id\": \"YOUR_PAYPAL_CLIENT_ID\" }}\n            >\n              <PayPalButtons\n                amount={profit} // Use the profit instead of totalPrice\n                onSuccess={(details, data) => {\n                  alert(\n                    \"Transaction completed by \" + details.payer.name.given_name\n                  );\n                  handleBooking(selectedTimeSlot);\n                }}\n                options={{\n                  clientId: \"YOUR_PAYPAL_CLIENT_ID\", // Replace with your actual PayPal client ID\n                  currency: \"USD\",\n                }}\n              />\n            </PayPalScriptProvider>\n          ) : (\n            <PayPalButton\n              amount={profit} // Use the profit instead of totalPrice\n              onSuccess={(details, data) => {\n                alert(\n                  \"Transaction completed by \" + details.payer.name.given_name\n                );\n                handleBooking(selectedTimeSlot);\n              }}\n              options={{\n                clientId: \"YOUR_PAYPAL_CLIENT_ID\", // Replace with your actual PayPal client ID\n                currency: \"USD\",\n              }}\n            />\n          )}\n        </div>\n\n        <button type='button' onClick={closeForm}>\n          Cancel\n        </button>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Dates;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}