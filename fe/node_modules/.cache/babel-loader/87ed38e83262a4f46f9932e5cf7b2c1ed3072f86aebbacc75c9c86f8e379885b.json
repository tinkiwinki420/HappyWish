{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\React_Node_Sql_Path2-main\\\\React_Node_Sql_Path2-main\\\\fe\\\\src\\\\components\\\\FullCalendarComponent.js\",\n  _s = $RefreshSig$();\n// src/components/MobiscrollCalendar.js\nimport { Eventcalendar, getJson, setOptions, Toast } from 'mobiscroll/react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nsetOptions({\n  theme: 'ios',\n  themeVariant: 'light'\n});\nfunction MobiscrollCalendar() {\n  _s();\n  const [myEvents, setEvents] = useState([]);\n  const [isToastOpen, setToastOpen] = useState(false);\n  const [toastMessage, setToastMessage] = useState();\n  const myView = useMemo(() => ({\n    calendar: {\n      type: 'month'\n    },\n    agenda: {\n      type: 'month'\n    }\n  }), []);\n  const handleToastClose = useCallback(() => {\n    setToastOpen(false);\n  }, []);\n  const handleEventClick = useCallback(args => {\n    setToastMessage(args.event.title);\n    setToastOpen(true);\n  }, []);\n  useEffect(() => {\n    getJson('https://trial.mobiscroll.com/events/?vers=5', events => {\n      setEvents(events);\n    }, 'jsonp');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Eventcalendar, {\n      clickToCreate: false,\n      dragToCreate: false,\n      dragToMove: false,\n      dragToResize: false,\n      eventDelete: false,\n      data: myEvents,\n      view: myView,\n      onEventClick: handleEventClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toast, {\n      message: toastMessage,\n      isOpen: isToastOpen,\n      onClose: handleToastClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(MobiscrollCalendar, \"t79NgAgMYDCf9W0p8VjrUU98bqQ=\");\n_c = MobiscrollCalendar;\nexport default MobiscrollCalendar;\n// src/components/MobiscrollCalendar.js\nvar _c;\n$RefreshReg$(_c, \"MobiscrollCalendar\");","map":{"version":3,"names":["Eventcalendar","getJson","setOptions","Toast","useCallback","useEffect","useMemo","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","theme","themeVariant","MobiscrollCalendar","_s","myEvents","setEvents","isToastOpen","setToastOpen","toastMessage","setToastMessage","myView","calendar","type","agenda","handleToastClose","handleEventClick","args","event","title","events","children","clickToCreate","dragToCreate","dragToMove","dragToResize","eventDelete","data","view","onEventClick","fileName","_jsxFileName","lineNumber","columnNumber","message","isOpen","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Downloads/React_Node_Sql_Path2-main/React_Node_Sql_Path2-main/fe/src/components/FullCalendarComponent.js"],"sourcesContent":["// src/components/MobiscrollCalendar.js\nimport { Eventcalendar, getJson, setOptions, Toast } from 'mobiscroll/react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\n\nsetOptions({\n  theme: 'ios',\n  themeVariant: 'light'\n});\n\nfunction MobiscrollCalendar() {\n  const [myEvents, setEvents] = useState([]);\n  const [isToastOpen, setToastOpen] = useState(false);\n  const [toastMessage, setToastMessage] = useState();\n\n  const myView = useMemo(\n    () => ({\n      calendar: { type: 'month' },\n      agenda: { type: 'month' },\n    }),\n    [],\n  );\n\n  const handleToastClose = useCallback(() => {\n    setToastOpen(false);\n  }, []);\n\n  const handleEventClick = useCallback((args) => {\n    setToastMessage(args.event.title);\n    setToastOpen(true);\n  }, []);\n\n  useEffect(() => {\n    getJson(\n      'https://trial.mobiscroll.com/events/?vers=5',\n      (events) => {\n        setEvents(events);\n      },\n      'jsonp',\n    );\n  }, []);\n\n  return (\n    <>\n      <Eventcalendar\n        clickToCreate={false}\n        dragToCreate={false}\n        dragToMove={false}\n        dragToResize={false}\n        eventDelete={false}\n        data={myEvents}\n        view={myView}\n        onEventClick={handleEventClick}\n      />\n      <Toast message={toastMessage} isOpen={isToastOpen} onClose={handleToastClose} />\n    </>\n  );\n}\n\nexport default MobiscrollCalendar;\n// src/components/MobiscrollCalendar.js\n\n"],"mappings":";;AAAA;AACA,SAASA,aAAa,EAAEC,OAAO,EAAEC,UAAU,EAAEC,KAAK,QAAQ,kBAAkB;AAC5E,SAASC,WAAW,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElET,UAAU,CAAC;EACTU,KAAK,EAAE,KAAK;EACZC,YAAY,EAAE;AAChB,CAAC,CAAC;AAEF,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,WAAW,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,CAAC;EAElD,MAAMe,MAAM,GAAGhB,OAAO,CACpB,OAAO;IACLiB,QAAQ,EAAE;MAAEC,IAAI,EAAE;IAAQ,CAAC;IAC3BC,MAAM,EAAE;MAAED,IAAI,EAAE;IAAQ;EAC1B,CAAC,CAAC,EACF,EACF,CAAC;EAED,MAAME,gBAAgB,GAAGtB,WAAW,CAAC,MAAM;IACzCe,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,gBAAgB,GAAGvB,WAAW,CAAEwB,IAAI,IAAK;IAC7CP,eAAe,CAACO,IAAI,CAACC,KAAK,CAACC,KAAK,CAAC;IACjCX,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAENd,SAAS,CAAC,MAAM;IACdJ,OAAO,CACL,6CAA6C,EAC5C8B,MAAM,IAAK;MACVd,SAAS,CAACc,MAAM,CAAC;IACnB,CAAC,EACD,OACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEtB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACEvB,OAAA,CAACT,aAAa;MACZiC,aAAa,EAAE,KAAM;MACrBC,YAAY,EAAE,KAAM;MACpBC,UAAU,EAAE,KAAM;MAClBC,YAAY,EAAE,KAAM;MACpBC,WAAW,EAAE,KAAM;MACnBC,IAAI,EAAEtB,QAAS;MACfuB,IAAI,EAAEjB,MAAO;MACbkB,YAAY,EAAEb;IAAiB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACFnC,OAAA,CAACN,KAAK;MAAC0C,OAAO,EAAEzB,YAAa;MAAC0B,MAAM,EAAE5B,WAAY;MAAC6B,OAAO,EAAErB;IAAiB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAChF,CAAC;AAEP;AAAC7B,EAAA,CA/CQD,kBAAkB;AAAAkC,EAAA,GAAlBlC,kBAAkB;AAiD3B,eAAeA,kBAAkB;AACjC;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}