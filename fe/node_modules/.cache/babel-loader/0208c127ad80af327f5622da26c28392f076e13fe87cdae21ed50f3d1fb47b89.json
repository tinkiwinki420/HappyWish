{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nconst useFetchDatesEffect = (userId, setCategory, setEvents, setUserType, setHallCapacity, setMinGuests, setPricePerEvent, setRegularMeals, setExclusiveMeal) => {\n  _s();\n  useEffect(() => {\n    const fetchUserType = () => {\n      const storedUserType = localStorage.getItem(\"userType\");\n      setUserType(storedUserType);\n    };\n    const fetchCategory = async () => {\n      try {\n        const response = await fetch(`/api/profile/business/${userId}/category`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setCategory(data.category || \"\");\n      } catch (error) {\n        console.error(\"Error fetching category:\", error.message);\n        alert(\"Error fetching category. Please try again later.\");\n      }\n    };\n    const fetchHallDetails = async () => {\n      try {\n        const response = await fetch(`/api/bookings/business/${userId}/capacity`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setHallCapacity(data.hallCapacity || 0);\n        setMinGuests(data.minGuests || 0);\n        setPricePerEvent(data.price_per_event || 0);\n      } catch (error) {\n        console.error(\"Error fetching hall details:\", error.message);\n        alert(\"Error fetching hall details. Please try again later.\");\n      }\n    };\n    const fetchBookedDates = async () => {\n      try {\n        const response = await fetch(`/api/profile/business/bookings/${userId}/booked-dates`);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch booked dates\");\n        }\n        const data = await response.json();\n        const formattedEvents = data.bookedDates.map(event => ({\n          start: new Date(event.booking_date),\n          end: new Date(event.booking_date),\n          title: `Booked: ${event.time_slot}`,\n          className: event.time_slot === \"day\" ? \"rbc-event-day\" : \"rbc-event-night\"\n        }));\n        setEvents(formattedEvents);\n      } catch (error) {\n        console.error(\"Error fetching booked dates:\", error.message);\n        alert(\"Error fetching booked dates. Please try again later.\");\n      }\n    };\n    const fetchMeals = async () => {\n      try {\n        const regularMealsResponse = await fetch(`/api/meals/regular/user/${userId}`);\n        const exclusiveMealsResponse = await fetch(`/api/meals/exclusive/user/${userId}`);\n        if (!regularMealsResponse.ok || !exclusiveMealsResponse.ok) {\n          throw new Error(\"Failed to fetch meals\");\n        }\n        const regularMealsData = await regularMealsResponse.json();\n        const exclusiveMealsData = await exclusiveMealsResponse.json();\n        setRegularMeals(regularMealsData);\n        setExclusiveMeal(exclusiveMealsData[0]);\n      } catch (error) {\n        console.error(\"Error fetching meals:\", error.message);\n        alert(\"Error fetching meals. Please try again later.\");\n      }\n    };\n    fetchUserType();\n    fetchCategory();\n    fetchHallDetails();\n    fetchBookedDates();\n    fetchMeals();\n  }, [userId]);\n};\n_s(useFetchDatesEffect, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport default useFetchDatesEffect;","map":{"version":3,"names":["useEffect","useFetchDatesEffect","userId","setCategory","setEvents","setUserType","setHallCapacity","setMinGuests","setPricePerEvent","setRegularMeals","setExclusiveMeal","_s","fetchUserType","storedUserType","localStorage","getItem","fetchCategory","response","fetch","ok","Error","status","data","json","category","error","console","message","alert","fetchHallDetails","hallCapacity","minGuests","price_per_event","fetchBookedDates","formattedEvents","bookedDates","map","event","start","Date","booking_date","end","title","time_slot","className","fetchMeals","regularMealsResponse","exclusiveMealsResponse","regularMealsData","exclusiveMealsData"],"sources":["C:/Users/Admin/Downloads/React_Node_Sql_Path2-main/React_Node_Sql_Path2-main/fe/src/hooks/useFetchDatesEffect.js"],"sourcesContent":["import { useEffect } from \"react\";\n\nconst useFetchDatesEffect = (\n  userId,\n  setCategory,\n  setEvents,\n  setUserType,\n  setHallCapacity,\n  setMinGuests,\n  setPricePerEvent,\n  setRegularMeals,\n  setExclusiveMeal\n) => {\n  useEffect(() => {\n    const fetchUserType = () => {\n      const storedUserType = localStorage.getItem(\"userType\");\n      setUserType(storedUserType);\n    };\n\n    const fetchCategory = async () => {\n      try {\n        const response = await fetch(\n          `/api/profile/business/${userId}/category`\n        );\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setCategory(data.category || \"\");\n      } catch (error) {\n        console.error(\"Error fetching category:\", error.message);\n        alert(\"Error fetching category. Please try again later.\");\n      }\n    };\n\n    const fetchHallDetails = async () => {\n      try {\n        const response = await fetch(\n          `/api/bookings/business/${userId}/capacity`\n        );\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setHallCapacity(data.hallCapacity || 0);\n        setMinGuests(data.minGuests || 0);\n        setPricePerEvent(data.price_per_event || 0);\n      } catch (error) {\n        console.error(\"Error fetching hall details:\", error.message);\n        alert(\"Error fetching hall details. Please try again later.\");\n      }\n    };\n\n    const fetchBookedDates = async () => {\n      try {\n        const response = await fetch(\n          `/api/profile/business/bookings/${userId}/booked-dates`\n        );\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch booked dates\");\n        }\n        const data = await response.json();\n        const formattedEvents = data.bookedDates.map((event) => ({\n          start: new Date(event.booking_date),\n          end: new Date(event.booking_date),\n          title: `Booked: ${event.time_slot}`,\n          className:\n            event.time_slot === \"day\" ? \"rbc-event-day\" : \"rbc-event-night\",\n        }));\n        setEvents(formattedEvents);\n      } catch (error) {\n        console.error(\"Error fetching booked dates:\", error.message);\n        alert(\"Error fetching booked dates. Please try again later.\");\n      }\n    };\n\n    const fetchMeals = async () => {\n      try {\n        const regularMealsResponse = await fetch(\n          `/api/meals/regular/user/${userId}`\n        );\n        const exclusiveMealsResponse = await fetch(\n          `/api/meals/exclusive/user/${userId}`\n        );\n\n        if (!regularMealsResponse.ok || !exclusiveMealsResponse.ok) {\n          throw new Error(\"Failed to fetch meals\");\n        }\n\n        const regularMealsData = await regularMealsResponse.json();\n        const exclusiveMealsData = await exclusiveMealsResponse.json();\n\n        setRegularMeals(regularMealsData);\n        setExclusiveMeal(exclusiveMealsData[0]);\n      } catch (error) {\n        console.error(\"Error fetching meals:\", error.message);\n        alert(\"Error fetching meals. Please try again later.\");\n      }\n    };\n\n    fetchUserType();\n    fetchCategory();\n    fetchHallDetails();\n    fetchBookedDates();\n    fetchMeals();\n  }, [userId]);\n};\n\nexport default useFetchDatesEffect;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}