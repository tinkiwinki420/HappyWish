{"ast":null,"code":"export const handleMealSelection = ({\n  meal,\n  selectedMeal,\n  setSelectedMeal,\n  setTotalPrice,\n  pricePerEvent,\n  setAdvancePayment,\n  numOfPeople // Ensure numOfPeople is passed correctly\n}) => {\n  // Convert numOfPeople to a valid number, default to 1 if invalid\n  const validNumOfPeople = Number(numOfPeople) > 0 ? Number(numOfPeople) : 1;\n  const mealPrice = meal.price || 0;\n  console.log(\"Meal Selection:\", {\n    mealPrice,\n    validNumOfPeople,\n    pricePerEvent\n  });\n  if (selectedMeal && selectedMeal.id === meal.id) {\n    // Deselect the meal\n    setSelectedMeal(null);\n    setTotalPrice(pricePerEvent); // Only event price is considered\n    setAdvancePayment(pricePerEvent * 0.05); // Calculate 5% advance payment\n  } else {\n    // Select the meal and calculate the total price and advance payment\n    setSelectedMeal(meal);\n    const total = mealPrice * validNumOfPeople + pricePerEvent;\n    setTotalPrice(total); // Calculate total price\n    console.log(total);\n    setAdvancePayment((total * 0.05).toFixed(2)); // 5% advance payment\n  }\n};\nexport const handleTimeSelection = ({\n  time,\n  category,\n  numOfPeople,\n  minGuests,\n  hallCapacity,\n  setShowModal,\n  setShowMealsSelection,\n  setTotalPrice,\n  pricePerEvent,\n  handleBooking\n}) => {\n  const validNumOfPeople = Number(numOfPeople) > 0 ? Number(numOfPeople) : 1;\n  console.log(\"Time Selection:\", {\n    validNumOfPeople,\n    minGuests,\n    hallCapacity\n  });\n  if (category === \"Hall\") {\n    // Validate the number of people\n    if (validNumOfPeople < minGuests || validNumOfPeople > hallCapacity) {\n      alert(`The number of people must be between ${minGuests} and ${hallCapacity}.`);\n      return;\n    }\n    setShowModal(false); // Close time selection modal\n    setShowMealsSelection(true); // Show meal selection modal\n  } else {\n    // Non-Hall booking\n    setTotalPrice(pricePerEvent); // Set total price as event price\n    setShowModal(false); // Close modal\n    handleBooking(time);\n  }\n};\nexport const handleBooking = ({\n  timeSlot,\n  selectedMeal,\n  category,\n  numOfPeople,\n  userId,\n  selectedDate,\n  totalPrice,\n  advancePayment,\n  closeForm\n}) => {\n  const validNumOfPeople = Number(numOfPeople) > 0 ? Number(numOfPeople) : 1;\n  console.log(\"Booking:\", {\n    validNumOfPeople,\n    totalPrice,\n    advancePayment\n  });\n  if (!timeSlot) {\n    alert(\"Please select a time slot before booking.\");\n    return;\n  }\n\n  // Calculate remaining balance\n  const remainingBalance = (totalPrice - advancePayment).toFixed(2);\n\n  // Create booking details object\n  let bookingDetails = {\n    business_id: userId,\n    user_id: localStorage.getItem(\"userId\"),\n    date: selectedDate.toISOString().split(\"T\")[0],\n    time_slot: timeSlot,\n    num_of_people: category === \"Hall\" ? validNumOfPeople : null,\n    total_price: totalPrice,\n    advance_payment: advancePayment,\n    remaining_balance: remainingBalance\n  };\n\n  // Include meal details if Hall booking\n  if (category === \"Hall\" && selectedMeal) {\n    bookingDetails = {\n      ...bookingDetails,\n      meal_name: selectedMeal.name,\n      meal_price: selectedMeal.price,\n      meal_image: `/uploads/${selectedMeal.image}`\n    };\n  }\n\n  // Send booking details to the server\n  fetch(`/api/profile/business/bookings/regular`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(bookingDetails)\n  }).then(response => response.json()).then(data => {\n    if (data.message === \"Booking created successfully\") {\n      alert(\"Booking successfully created!\");\n      closeForm(); // Reset form after booking\n    } else {\n      alert(data.message);\n    }\n  }).catch(error => {\n    console.error(\"Error storing date selection:\", error.message);\n    alert(\"Error storing date selection. Please try again later.\");\n  });\n};","map":{"version":3,"names":["handleMealSelection","meal","selectedMeal","setSelectedMeal","setTotalPrice","pricePerEvent","setAdvancePayment","numOfPeople","validNumOfPeople","Number","mealPrice","price","console","log","id","total","toFixed","handleTimeSelection","time","category","minGuests","hallCapacity","setShowModal","setShowMealsSelection","handleBooking","alert","timeSlot","userId","selectedDate","totalPrice","advancePayment","closeForm","remainingBalance","bookingDetails","business_id","user_id","localStorage","getItem","date","toISOString","split","time_slot","num_of_people","total_price","advance_payment","remaining_balance","meal_name","name","meal_price","meal_image","image","fetch","method","headers","body","JSON","stringify","then","response","json","data","message","catch","error"],"sources":["C:/Users/Admin/Downloads/React_Node_Sql_Path2-main/React_Node_Sql_Path2-main/fe/src/components/Dates/handlers/BookingHandlers.js"],"sourcesContent":["export const handleMealSelection = ({\n  meal,\n  selectedMeal,\n  setSelectedMeal,\n  setTotalPrice,\n  pricePerEvent,\n  setAdvancePayment,\n  numOfPeople,  // Ensure numOfPeople is passed correctly\n}) => {\n  // Convert numOfPeople to a valid number, default to 1 if invalid\n  const validNumOfPeople = Number(numOfPeople) > 0 ? Number(numOfPeople) : 1;\n  const mealPrice = meal.price || 0;\n\n  console.log(\"Meal Selection:\", { mealPrice, validNumOfPeople, pricePerEvent });\n\n  if (selectedMeal && selectedMeal.id === meal.id) {\n    // Deselect the meal\n    setSelectedMeal(null);\n    setTotalPrice(pricePerEvent); // Only event price is considered\n    setAdvancePayment(pricePerEvent * 0.05); // Calculate 5% advance payment\n  } else {\n    // Select the meal and calculate the total price and advance payment\n    setSelectedMeal(meal);\n    const total = mealPrice * validNumOfPeople + pricePerEvent;\n    setTotalPrice(total); // Calculate total price\n    console.log(total);\n    setAdvancePayment((total * 0.05).toFixed(2)); // 5% advance payment\n  }\n};\n\nexport const handleTimeSelection = ({\n  time,\n  category,\n  numOfPeople,\n  minGuests,\n  hallCapacity,\n  setShowModal,\n  setShowMealsSelection,\n  setTotalPrice,\n  pricePerEvent,\n  handleBooking,\n}) => {\n  const validNumOfPeople = Number(numOfPeople) > 0 ? Number(numOfPeople) : 1;\n\n  console.log(\"Time Selection:\", { validNumOfPeople, minGuests, hallCapacity });\n\n  if (category === \"Hall\") {\n    // Validate the number of people\n    if (validNumOfPeople < minGuests || validNumOfPeople > hallCapacity) {\n      alert(`The number of people must be between ${minGuests} and ${hallCapacity}.`);\n      return;\n    }\n    setShowModal(false); // Close time selection modal\n    setShowMealsSelection(true); // Show meal selection modal\n  } else {\n    // Non-Hall booking\n    setTotalPrice(pricePerEvent); // Set total price as event price\n    setShowModal(false); // Close modal\n    handleBooking(time);\n  }\n};\n\nexport const handleBooking = ({\n  timeSlot,\n  selectedMeal,\n  category,\n  numOfPeople,\n  userId,\n  selectedDate,\n  totalPrice,\n  advancePayment,\n  closeForm,\n}) => {\n  const validNumOfPeople = Number(numOfPeople) > 0 ? Number(numOfPeople) : 1;\n\n  console.log(\"Booking:\", { validNumOfPeople, totalPrice, advancePayment });\n\n  if (!timeSlot) {\n    alert(\"Please select a time slot before booking.\");\n    return;\n  }\n\n  // Calculate remaining balance\n  const remainingBalance = (totalPrice - advancePayment).toFixed(2);\n  \n  // Create booking details object\n  let bookingDetails = {\n    business_id: userId,\n    user_id: localStorage.getItem(\"userId\"),\n    date: selectedDate.toISOString().split(\"T\")[0],\n    time_slot: timeSlot,\n    num_of_people: category === \"Hall\" ? validNumOfPeople : null,\n    total_price: totalPrice,\n    advance_payment: advancePayment,\n    remaining_balance: remainingBalance,\n  };\n\n  // Include meal details if Hall booking\n  if (category === \"Hall\" && selectedMeal) {\n    bookingDetails = {\n      ...bookingDetails,\n      meal_name: selectedMeal.name,\n      meal_price: selectedMeal.price,\n      meal_image: `/uploads/${selectedMeal.image}`,\n    };\n  }\n\n  // Send booking details to the server\n  fetch(`/api/profile/business/bookings/regular`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(bookingDetails),\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      if (data.message === \"Booking created successfully\") {\n        alert(\"Booking successfully created!\");\n        closeForm(); // Reset form after booking\n      } else {\n        alert(data.message);\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error storing date selection:\", error.message);\n      alert(\"Error storing date selection. Please try again later.\");\n    });\n};\n"],"mappings":"AAAA,OAAO,MAAMA,mBAAmB,GAAGA,CAAC;EAClCC,IAAI;EACJC,YAAY;EACZC,eAAe;EACfC,aAAa;EACbC,aAAa;EACbC,iBAAiB;EACjBC,WAAW,CAAG;AAChB,CAAC,KAAK;EACJ;EACA,MAAMC,gBAAgB,GAAGC,MAAM,CAACF,WAAW,CAAC,GAAG,CAAC,GAAGE,MAAM,CAACF,WAAW,CAAC,GAAG,CAAC;EAC1E,MAAMG,SAAS,GAAGT,IAAI,CAACU,KAAK,IAAI,CAAC;EAEjCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE;IAAEH,SAAS;IAAEF,gBAAgB;IAAEH;EAAc,CAAC,CAAC;EAE9E,IAAIH,YAAY,IAAIA,YAAY,CAACY,EAAE,KAAKb,IAAI,CAACa,EAAE,EAAE;IAC/C;IACAX,eAAe,CAAC,IAAI,CAAC;IACrBC,aAAa,CAACC,aAAa,CAAC,CAAC,CAAC;IAC9BC,iBAAiB,CAACD,aAAa,GAAG,IAAI,CAAC,CAAC,CAAC;EAC3C,CAAC,MAAM;IACL;IACAF,eAAe,CAACF,IAAI,CAAC;IACrB,MAAMc,KAAK,GAAGL,SAAS,GAAGF,gBAAgB,GAAGH,aAAa;IAC1DD,aAAa,CAACW,KAAK,CAAC,CAAC,CAAC;IACtBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IAClBT,iBAAiB,CAAC,CAACS,KAAK,GAAG,IAAI,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChD;AACF,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAGA,CAAC;EAClCC,IAAI;EACJC,QAAQ;EACRZ,WAAW;EACXa,SAAS;EACTC,YAAY;EACZC,YAAY;EACZC,qBAAqB;EACrBnB,aAAa;EACbC,aAAa;EACbmB;AACF,CAAC,KAAK;EACJ,MAAMhB,gBAAgB,GAAGC,MAAM,CAACF,WAAW,CAAC,GAAG,CAAC,GAAGE,MAAM,CAACF,WAAW,CAAC,GAAG,CAAC;EAE1EK,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE;IAAEL,gBAAgB;IAAEY,SAAS;IAAEC;EAAa,CAAC,CAAC;EAE7E,IAAIF,QAAQ,KAAK,MAAM,EAAE;IACvB;IACA,IAAIX,gBAAgB,GAAGY,SAAS,IAAIZ,gBAAgB,GAAGa,YAAY,EAAE;MACnEI,KAAK,CAAE,wCAAuCL,SAAU,QAAOC,YAAa,GAAE,CAAC;MAC/E;IACF;IACAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACrBC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC/B,CAAC,MAAM;IACL;IACAnB,aAAa,CAACC,aAAa,CAAC,CAAC,CAAC;IAC9BiB,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACrBE,aAAa,CAACN,IAAI,CAAC;EACrB;AACF,CAAC;AAED,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAC5BE,QAAQ;EACRxB,YAAY;EACZiB,QAAQ;EACRZ,WAAW;EACXoB,MAAM;EACNC,YAAY;EACZC,UAAU;EACVC,cAAc;EACdC;AACF,CAAC,KAAK;EACJ,MAAMvB,gBAAgB,GAAGC,MAAM,CAACF,WAAW,CAAC,GAAG,CAAC,GAAGE,MAAM,CAACF,WAAW,CAAC,GAAG,CAAC;EAE1EK,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE;IAAEL,gBAAgB;IAAEqB,UAAU;IAAEC;EAAe,CAAC,CAAC;EAEzE,IAAI,CAACJ,QAAQ,EAAE;IACbD,KAAK,CAAC,2CAA2C,CAAC;IAClD;EACF;;EAEA;EACA,MAAMO,gBAAgB,GAAG,CAACH,UAAU,GAAGC,cAAc,EAAEd,OAAO,CAAC,CAAC,CAAC;;EAEjE;EACA,IAAIiB,cAAc,GAAG;IACnBC,WAAW,EAAEP,MAAM;IACnBQ,OAAO,EAAEC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IACvCC,IAAI,EAAEV,YAAY,CAACW,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9CC,SAAS,EAAEf,QAAQ;IACnBgB,aAAa,EAAEvB,QAAQ,KAAK,MAAM,GAAGX,gBAAgB,GAAG,IAAI;IAC5DmC,WAAW,EAAEd,UAAU;IACvBe,eAAe,EAAEd,cAAc;IAC/Be,iBAAiB,EAAEb;EACrB,CAAC;;EAED;EACA,IAAIb,QAAQ,KAAK,MAAM,IAAIjB,YAAY,EAAE;IACvC+B,cAAc,GAAG;MACf,GAAGA,cAAc;MACjBa,SAAS,EAAE5C,YAAY,CAAC6C,IAAI;MAC5BC,UAAU,EAAE9C,YAAY,CAACS,KAAK;MAC9BsC,UAAU,EAAG,YAAW/C,YAAY,CAACgD,KAAM;IAC7C,CAAC;EACH;;EAEA;EACAC,KAAK,CAAE,wCAAuC,EAAE;IAC9CC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACvB,cAAc;EACrC,CAAC,CAAC,CACCwB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;IACd,IAAIA,IAAI,CAACC,OAAO,KAAK,8BAA8B,EAAE;MACnDpC,KAAK,CAAC,+BAA+B,CAAC;MACtCM,SAAS,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,MAAM;MACLN,KAAK,CAACmC,IAAI,CAACC,OAAO,CAAC;IACrB;EACF,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IAChBnD,OAAO,CAACmD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACF,OAAO,CAAC;IAC7DpC,KAAK,CAAC,uDAAuD,CAAC;EAChE,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}