{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\React_Node_Sql_Path2-main\\\\React_Node_Sql_Path2-main\\\\fe\\\\src\\\\components\\\\RegularUserRegister.js\",\n  _s = $RefreshSig$();\n// src/components/RegularUserRegister.js\nimport React, { useState } from 'react';\nimport { API_URL } from '../constans';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegularUserRegister = () => {\n  _s();\n  const [firstname, setFirstname] = useState('');\n  const [lastname, setLastname] = useState('');\n  const [id, setId] = useState('');\n  const [number, setNumber] = useState('');\n  const [address, setAddress] = useState('');\n  const [dob, setDob] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      const response = await fetch(`${API_URL}/api/register/regular`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          firstname,\n          lastname,\n          id,\n          number,\n          address,\n          dob,\n          email,\n          password\n        })\n      });\n      const text = await response.text();\n      try {\n        const data = JSON.parse(text);\n        if (response.ok) {\n          alert(data.message);\n        } else {\n          setError(data.message || 'Error registering regular user');\n        }\n      } catch (error) {\n        console.error('Error parsing JSON:', error, 'Response:', text);\n        setError('Error registering regular user. Please check the console for more details.');\n      }\n    } catch (error) {\n      console.error('Error registering regular user:', error);\n      setError('Error registering regular user. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"First Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: firstname,\n        onChange: e => setFirstname(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Last Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: lastname,\n        onChange: e => setLastname(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: id,\n        onChange: e => setId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Phone Number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: number,\n        onChange: e => setNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: address,\n        onChange: e => setAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Date of Birth:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: dob,\n        onChange: e => setDob(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(RegularUserRegister, \"gTVkMHihVwQeqA5/JRwKGjjDJq0=\");\n_c = RegularUserRegister;\nexport default RegularUserRegister;\nvar _c;\n$RefreshReg$(_c, \"RegularUserRegister\");","map":{"version":3,"names":["React","useState","API_URL","jsxDEV","_jsxDEV","RegularUserRegister","_s","firstname","setFirstname","lastname","setLastname","id","setId","number","setNumber","address","setAddress","dob","setDob","email","setEmail","password","setPassword","error","setError","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","text","data","parse","ok","alert","message","console","onSubmit","children","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Downloads/React_Node_Sql_Path2-main/React_Node_Sql_Path2-main/fe/src/components/RegularUserRegister.js"],"sourcesContent":["// src/components/RegularUserRegister.js\nimport React, { useState } from 'react';\nimport { API_URL } from '../constans';\n\nconst RegularUserRegister = () => {\n  const [firstname, setFirstname] = useState('');\n  const [lastname, setLastname] = useState('');\n  const [id, setId] = useState('');\n  const [number, setNumber] = useState('');\n  const [address, setAddress] = useState('');\n  const [dob, setDob] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    try {\n      const response = await fetch(`${API_URL}/api/register/regular`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ firstname, lastname, id, number, address, dob, email, password }),\n      });\n\n      const text = await response.text();\n      try {\n        const data = JSON.parse(text);\n        if (response.ok) {\n          alert(data.message);\n        } else {\n          setError(data.message || 'Error registering regular user');\n        }\n      } catch (error) {\n        console.error('Error parsing JSON:', error, 'Response:', text);\n        setError('Error registering regular user. Please check the console for more details.');\n      }\n    } catch (error) {\n      console.error('Error registering regular user:', error);\n      setError('Error registering regular user. Please try again.');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        First Name:\n        <input type=\"text\" value={firstname} onChange={(e) => setFirstname(e.target.value)} />\n      </label>\n      <label>\n        Last Name:\n        <input type=\"text\" value={lastname} onChange={(e) => setLastname(e.target.value)} />\n      </label>\n      <label>\n        ID:\n        <input type=\"text\" value={id} onChange={(e) => setId(e.target.value)} />\n      </label>\n      <label>\n        Phone Number:\n        <input type=\"text\" value={number} onChange={(e) => setNumber(e.target.value)} />\n      </label>\n      <label>\n        Address:\n        <input type=\"text\" value={address} onChange={(e) => setAddress(e.target.value)} />\n      </label>\n      <label>\n        Date of Birth:\n        <input type=\"date\" value={dob} onChange={(e) => setDob(e.target.value)} />\n      </label>\n      <label>\n        Email:\n        <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n      </label>\n      <label>\n        Password:\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n      </label>\n      <button type=\"submit\">Register</button>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n    </form>\n  );\n};\n\nexport default RegularUserRegister;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}