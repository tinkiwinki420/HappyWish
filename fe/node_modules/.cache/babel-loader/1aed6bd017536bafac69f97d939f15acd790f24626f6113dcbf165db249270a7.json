{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\React_Node_Sql_Path2-main\\\\React_Node_Sql_Path2-main\\\\fe\\\\src\\\\pages\\\\Categories.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { API_URL } from \"../constans\";\nimport \"../styles/Categories.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Categories = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [categoryPhoto, setCategoryPhoto] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetch(`${API_URL}/api/categories`).then(response => response.json()).then(data => {\n      console.log(\"Fetched categories:\", data);\n      setCategories(data);\n    }).catch(error => console.error(\"Error fetching categories:\", error));\n  }, []);\n  const handleCategoryClick = categoryId => {\n    // Assuming you have a way to get the category name from the categories array\n    const selectedCategory = categories.find(category => category.id === categoryId);\n    if (selectedCategory) {\n      localStorage.setItem('category', selectedCategory.name); // Set the selected category\n    }\n    navigate(`/category/${categoryId}`);\n  };\n  const handleFileChange = e => {\n    setCategoryPhoto(e.target.files[0]);\n  };\n  const handleUploadPhoto = async categoryId => {\n    if (!categoryPhoto) {\n      alert(\"Please select a photo to upload\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"categoryPhoto\", categoryPhoto);\n    try {\n      const response = await fetch(`${API_URL}/api/categories/${categoryId}/upload-photo`, {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        alert(data.message);\n        // Refresh categories to show the updated photo\n        fetch(`${API_URL}/api/categories`).then(response => response.json()).then(data => setCategories(data));\n      } else {\n        const errorData = await response.json();\n        alert(errorData.message || \"Error uploading photo\");\n      }\n    } catch (error) {\n      console.error(\"Error uploading category photo:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"categories-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"categories-grid\",\n      children: categories.length > 0 ? categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: category.category_photo ? `${API_URL}${category.category_photo}` : \"https://via.placeholder.com/100\",\n          alt: category.name,\n          onClick: () => handleCategoryClick(category.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUploadPhoto(category.id),\n          children: \"Upload Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)]\n      }, category.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No categories available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Categories, \"GyI0oQANFZWYlQISckLYYkOC5V0=\", false, function () {\n  return [useNavigate];\n});\n_c = Categories;\nexport default Categories;\nvar _c;\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","API_URL","jsxDEV","_jsxDEV","Categories","_s","categories","setCategories","categoryPhoto","setCategoryPhoto","navigate","fetch","then","response","json","data","console","log","catch","error","handleCategoryClick","categoryId","selectedCategory","find","category","id","localStorage","setItem","name","handleFileChange","e","target","files","handleUploadPhoto","alert","formData","FormData","append","method","body","ok","message","errorData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","src","category_photo","alt","onClick","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Downloads/React_Node_Sql_Path2-main/React_Node_Sql_Path2-main/fe/src/pages/Categories.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { API_URL } from \"../constans\";\nimport \"../styles/Categories.css\";\n\nconst Categories = () => {\n  const [categories, setCategories] = useState([]);\n\n  const [categoryPhoto, setCategoryPhoto] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetch(`${API_URL}/api/categories`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Fetched categories:\", data);\n        setCategories(data);\n      })\n      .catch((error) => console.error(\"Error fetching categories:\", error));\n  }, []);\n\n  const handleCategoryClick = (categoryId) => {\n    // Assuming you have a way to get the category name from the categories array\n    const selectedCategory = categories.find(category => category.id === categoryId);\n    if (selectedCategory) {\n      localStorage.setItem('category', selectedCategory.name); // Set the selected category\n    }\n    navigate(`/category/${categoryId}`);\n  };\n\n  const handleFileChange = (e) => {\n    setCategoryPhoto(e.target.files[0]);\n  };\n\n  const handleUploadPhoto = async (categoryId) => {\n    if (!categoryPhoto) {\n      alert(\"Please select a photo to upload\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"categoryPhoto\", categoryPhoto);\n\n    try {\n      const response = await fetch(\n        `${API_URL}/api/categories/${categoryId}/upload-photo`,\n        {\n          method: \"POST\",\n          body: formData,\n        }\n      );\n\n      if (response.ok) {\n        const data = await response.json();\n        alert(data.message);\n        // Refresh categories to show the updated photo\n        fetch(`${API_URL}/api/categories`)\n          .then((response) => response.json())\n          .then((data) => setCategories(data));\n      } else {\n        const errorData = await response.json();\n        alert(errorData.message || \"Error uploading photo\");\n      }\n    } catch (error) {\n      console.error(\"Error uploading category photo:\", error);\n    }\n  };\n\n  return (\n    <div className='categories-container'>\n      <h1>Categories</h1>\n      <div className='categories-grid'>\n        {categories.length > 0 ? (\n          categories.map((category) => (\n            <div key={category.id} className='category-item'>\n              <img\n                src={\n                  category.category_photo\n                    ? `${API_URL}${category.category_photo}`\n                    : \"https://via.placeholder.com/100\"\n                }\n                alt={category.name}\n                onClick={() => handleCategoryClick(category.id)}\n              />\n              <p>{category.name}</p>\n              <input type='file' onChange={handleFileChange} />\n              <button onClick={() => handleUploadPhoto(category.id)}>\n                Upload Photo\n              </button>\n            </div>\n          ))\n        ) : (\n          <p>No categories available</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Categories;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}