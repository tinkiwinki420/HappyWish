{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\React_Node_Sql_Path2-main\\\\React_Node_Sql_Path2-main\\\\fe\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Route, Routes, Navigate } from 'react-router-dom';\nimport MainPage from './pages/MainPage';\nimport SinglePost from './pages/SinglePost';\nimport './App.css';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Contacts from './pages/Contacts';\nimport About from './pages/About';\nimport NewPost from './pages/NewPost';\nimport EditPost from './pages/EditPost';\nimport Register from './components/Register';\nimport NormalDashboard from './components/NormalDashboard';\nimport BusinessDashboard from './components/BusinessDashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userType, setUserType] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchUserType = async () => {\n      // Assuming you store token in localStorage after login\n      const token = localStorage.getItem('token');\n      if (token) {\n        const config = {\n          headers: {\n            'Content-Type': 'application/json',\n            'x-auth-token': token\n          }\n        };\n        try {\n          const res = await axios.get('/api/auth/user', config);\n          setUserType(res.data.userType);\n        } catch (err) {\n          console.error(err);\n        }\n      }\n      setLoading(false);\n    };\n    fetchUserType();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), userType === 'normal' && /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\",\n          element: /*#__PURE__*/_jsxDEV(NormalDashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 81\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 47\n        }, this), userType === 'business' && /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\",\n          element: /*#__PURE__*/_jsxDEV(BusinessDashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 83\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 49\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: userType ? \"/dashboard\" : \"/register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/post/:id\",\n          element: /*#__PURE__*/_jsxDEV(SinglePost, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(MainPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/newpost\",\n          element: /*#__PURE__*/_jsxDEV(NewPost, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/editpost/:id\",\n          element: /*#__PURE__*/_jsxDEV(EditPost, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/contact\",\n          element: /*#__PURE__*/_jsxDEV(Contacts, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"GgNAWC36g7FIn3HxUNBRhIdo7ag=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Route","Routes","Navigate","MainPage","SinglePost","axios","Header","Footer","Contacts","About","NewPost","EditPost","Register","NormalDashboard","BusinessDashboard","jsxDEV","_jsxDEV","App","_s","userType","setUserType","loading","setLoading","fetchUserType","token","localStorage","getItem","config","headers","res","get","data","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","path","element","to","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Downloads/React_Node_Sql_Path2-main/React_Node_Sql_Path2-main/fe/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Route, Routes, Navigate } from 'react-router-dom';\nimport MainPage from './pages/MainPage';\nimport SinglePost from './pages/SinglePost';\nimport './App.css';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Contacts from './pages/Contacts';\nimport About from './pages/About';\nimport NewPost from './pages/NewPost';\nimport EditPost from './pages/EditPost';\nimport Register from './components/Register';\nimport NormalDashboard from './components/NormalDashboard';\nimport BusinessDashboard from './components/BusinessDashboard';\n\nfunction App() {\n    const [userType, setUserType] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchUserType = async () => {\n            // Assuming you store token in localStorage after login\n            const token = localStorage.getItem('token');\n            if (token) {\n                const config = {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'x-auth-token': token\n                    }\n                };\n\n                try {\n                    const res = await axios.get('/api/auth/user', config);\n                    setUserType(res.data.userType);\n                } catch (err) {\n                    console.error(err);\n                }\n            }\n            setLoading(false);\n        };\n\n        fetchUserType();\n    }, []);\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div className=\"App\">\n            <Header />\n            <div className=\"main\">\n                <Routes>\n                    <Route path=\"/register\" element={<Register />} />\n                    {userType === 'normal' && <Route path=\"/dashboard\" element={<NormalDashboard />} />}\n                    {userType === 'business' && <Route path=\"/dashboard\" element={<BusinessDashboard />} />}\n                    <Route path=\"/\" element={<Navigate to={userType ? \"/dashboard\" : \"/register\"} />} />\n                    <Route path=\"/post/:id\" element={<SinglePost />} />\n                    <Route path=\"/\" element={<MainPage />} />\n                    <Route path=\"/newpost\" element={<NewPost />} />\n                    <Route path=\"/editpost/:id\" element={<EditPost />} />\n                    <Route path=\"/about\" element={<About />} />\n                    <Route path=\"/contact\" element={<Contacts />} />\n                </Routes>\n            </div>\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}