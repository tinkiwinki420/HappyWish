{"ast":null,"code":"// Example handlePhotoUpload function\nexport const handlePhotoUpload = (e, userId, newPhotos, setNewPhotos, setPhotos, userType) => {\n  e.preventDefault();\n\n  // Logic to handle photo upload\n  const files = e.target.files;\n\n  // Process and upload each file\n  if (files.length > 0) {\n    const formData = new FormData();\n    Array.from(files).forEach(file => {\n      formData.append('photos', file);\n    });\n\n    // Assume you have an API endpoint to handle file upload\n    fetch(`/api/upload/${userType}/${userId}`, {\n      method: 'POST',\n      body: formData\n    }).then(response => response.json()).then(data => {\n      // Update the state with the newly uploaded photos\n      setPhotos(prevPhotos => [...prevPhotos, ...data.uploadedPhotos]);\n      setNewPhotos([]); // Clear the new photos after upload\n    }).catch(error => console.error('Error uploading photos:', error));\n  }\n};","map":{"version":3,"names":["handlePhotoUpload","e","userId","newPhotos","setNewPhotos","setPhotos","userType","preventDefault","files","target","length","formData","FormData","Array","from","forEach","file","append","fetch","method","body","then","response","json","data","prevPhotos","uploadedPhotos","catch","error","console"],"sources":["C:/Users/USER/Desktop/HappyWish/HappyWish/fe/src/components/PhotoUploadHandler.js"],"sourcesContent":["// Example handlePhotoUpload function\r\nexport const handlePhotoUpload = (e, userId, newPhotos, setNewPhotos, setPhotos, userType) => {\r\n  e.preventDefault();\r\n\r\n  // Logic to handle photo upload\r\n  const files = e.target.files;\r\n\r\n  // Process and upload each file\r\n  if (files.length > 0) {\r\n    const formData = new FormData();\r\n    Array.from(files).forEach((file) => {\r\n      formData.append('photos', file);\r\n    });\r\n\r\n    // Assume you have an API endpoint to handle file upload\r\n    fetch(`/api/upload/${userType}/${userId}`, {\r\n      method: 'POST',\r\n      body: formData,\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        // Update the state with the newly uploaded photos\r\n        setPhotos(prevPhotos => [...prevPhotos, ...data.uploadedPhotos]);\r\n        setNewPhotos([]); // Clear the new photos after upload\r\n      })\r\n      .catch(error => console.error('Error uploading photos:', error));\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,iBAAiB,GAAGA,CAACC,CAAC,EAAEC,MAAM,EAAEC,SAAS,EAAEC,YAAY,EAAEC,SAAS,EAAEC,QAAQ,KAAK;EAC5FL,CAAC,CAACM,cAAc,CAAC,CAAC;;EAElB;EACA,MAAMC,KAAK,GAAGP,CAAC,CAACQ,MAAM,CAACD,KAAK;;EAE5B;EACA,IAAIA,KAAK,CAACE,MAAM,GAAG,CAAC,EAAE;IACpB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BC,KAAK,CAACC,IAAI,CAACN,KAAK,CAAC,CAACO,OAAO,CAAEC,IAAI,IAAK;MAClCL,QAAQ,CAACM,MAAM,CAAC,QAAQ,EAAED,IAAI,CAAC;IACjC,CAAC,CAAC;;IAEF;IACAE,KAAK,CAAE,eAAcZ,QAAS,IAAGJ,MAAO,EAAC,EAAE;MACzCiB,MAAM,EAAE,MAAM;MACdC,IAAI,EAAET;IACR,CAAC,CAAC,CACCU,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ;MACAnB,SAAS,CAACoB,UAAU,IAAI,CAAC,GAAGA,UAAU,EAAE,GAAGD,IAAI,CAACE,cAAc,CAAC,CAAC;MAChEtB,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CACDuB,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;EACpE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}