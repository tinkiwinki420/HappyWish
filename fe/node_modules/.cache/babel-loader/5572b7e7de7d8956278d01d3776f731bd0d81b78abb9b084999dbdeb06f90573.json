{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\React_Node_Sql_Path2-main\\\\React_Node_Sql_Path2-main\\\\fe\\\\src\\\\components\\\\CategoryUserProfile .js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/CategoryUserProfile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryUserProfile = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [user, setUser] = useState(null);\n  const [photos, setPhotos] = useState([]);\n  const [loading, setLoading] = useState(true); // Add loading state\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const userResponse = await fetch(`/api/profile/business/${userId}`);\n        if (!userResponse.ok) {\n          throw new Error('User data fetch failed');\n        }\n        const userData = await userResponse.json();\n        setUser(userData);\n        const photosResponse = await fetch(`/api/profile/business/users/${userId}/photos`);\n        if (!photosResponse.ok) {\n          throw new Error('Photos fetch failed');\n        }\n        const photosData = await photosResponse.json();\n        setPhotos(photosData.photos);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false); // Set loading to false once data is fetched\n      }\n    };\n    fetchUserData();\n  }, [userId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this); // Show loading indicator\n  }\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No user data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this); // Show error message if no user data\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category-user-profile\",\n    children: [user.profilePhoto ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: user.profilePhoto,\n      alt: `${user.businessName} profile`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-photo-placeholder\",\n      children: \"No Profile Photo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: user.businessName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Address: \", user.address]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-photos\",\n      children: photos.length > 0 ? photos.map((photo, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.photo,\n        alt: ` ${index + 1}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No photos available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(CategoryUserProfile, \"g3y5CmOEO4WqQ3BFjTH758blo6w=\", false, function () {\n  return [useParams];\n});\n_c = CategoryUserProfile;\nexport default CategoryUserProfile;\nvar _c;\n$RefreshReg$(_c, \"CategoryUserProfile\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","CategoryUserProfile","_s","userId","user","setUser","photos","setPhotos","loading","setLoading","fetchUserData","userResponse","fetch","ok","Error","userData","json","photosResponse","photosData","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","profilePhoto","src","alt","businessName","address","email","length","map","photo","index","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Downloads/React_Node_Sql_Path2-main/React_Node_Sql_Path2-main/fe/src/components/CategoryUserProfile .js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/CategoryUserProfile.css';\n\nconst CategoryUserProfile = () => {\n  const { userId } = useParams();\n  const [user, setUser] = useState(null);\n  const [photos, setPhotos] = useState([]);\n  const [loading, setLoading] = useState(true); // Add loading state\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const userResponse = await fetch(`/api/profile/business/${userId}`);\n        if (!userResponse.ok) {\n          throw new Error('User data fetch failed');\n        }\n        const userData = await userResponse.json();\n        setUser(userData);\n\n        const photosResponse = await fetch(`/api/profile/business/users/${userId}/photos`);\n        if (!photosResponse.ok) {\n          throw new Error('Photos fetch failed');\n        }\n        const photosData = await photosResponse.json();\n        setPhotos(photosData.photos);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false); // Set loading to false once data is fetched\n      }\n    };\n\n    fetchUserData();\n  }, [userId]);\n\n  if (loading) {\n    return <p>Loading...</p>; // Show loading indicator\n  }\n\n  if (!user) {\n    return <p>No user data available</p>; // Show error message if no user data\n  }\n\n  return (\n    <div className=\"category-user-profile\">\n      {user.profilePhoto ? (\n        <img src={user.profilePhoto} alt={`${user.businessName} profile`} />\n      ) : (\n        <div className=\"profile-photo-placeholder\">No Profile Photo</div>\n      )}\n      <h2>{user.businessName}</h2>\n      <p>Address: {user.address}</p>\n      <p>Email: {user.email}</p>\n      <div className=\"user-photos\">\n        {photos.length > 0 ? (\n          photos.map((photo, index) => (\n            <img key={index} src={user.photo} alt={` ${index + 1}`} />\n          ))\n        ) : (\n          <p>No photos available</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CategoryUserProfile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}