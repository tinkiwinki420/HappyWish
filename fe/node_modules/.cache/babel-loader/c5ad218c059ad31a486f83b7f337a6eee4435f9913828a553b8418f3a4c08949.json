{"ast":null,"code":"// be/routes/register.js\nconst express = require('express');\nconst router = express.Router();\nconst db = require('../config/db');\n\n// Register Regular User\nrouter.post('/regular', (req, res) => {\n  const {\n    username,\n    password\n  } = req.body;\n  const query = 'INSERT INTO regular_users (username, password) VALUES (?, ?)';\n  db.query(query, [username, password], (err, results) => {\n    if (err) {\n      console.error('Database error:', err);\n      res.status(500).json({\n        message: 'Error registering regular user',\n        error: err\n      });\n    } else {\n      res.status(201).json({\n        message: 'Regular user registered successfully'\n      });\n    }\n  });\n});\n\n// Register Business User\nrouter.post('/business', (req, res) => {\n  const {\n    businessName,\n    username,\n    password\n  } = req.body;\n  const query = 'INSERT INTO business_users (businessName, username, password) VALUES (?, ?, ?)';\n  db.query(query, [businessName, username, password], (err, results) => {\n    if (err) {\n      console.error('Database error:', err);\n      res.status(500).json({\n        message: 'Error registering business user',\n        error: err\n      });\n    } else {\n      res.status(201).json({\n        message: 'Business user registered successfully'\n      });\n    }\n  });\n});\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","db","post","req","res","username","password","body","query","err","results","console","error","status","json","message","businessName","module","exports"],"sources":["C:/Users/Admin/Downloads/React_Node_Sql_Path2-main/React_Node_Sql_Path2-main/fe/src/components/BusinessUserRegister.js"],"sourcesContent":["// be/routes/register.js\nconst express = require('express');\nconst router = express.Router();\nconst db = require('../config/db');\n\n// Register Regular User\nrouter.post('/regular', (req, res) => {\n  const { username, password } = req.body;\n  const query = 'INSERT INTO regular_users (username, password) VALUES (?, ?)';\n  db.query(query, [username, password], (err, results) => {\n    if (err) {\n      console.error('Database error:', err);\n      res.status(500).json({ message: 'Error registering regular user', error: err });\n    } else {\n      res.status(201).json({ message: 'Regular user registered successfully' });\n    }\n  });\n});\n\n// Register Business User\nrouter.post('/business', (req, res) => {\n  const { businessName, username, password } = req.body;\n  const query = 'INSERT INTO business_users (businessName, username, password) VALUES (?, ?, ?)';\n  db.query(query, [businessName, username, password], (err, results) => {\n    if (err) {\n      console.error('Database error:', err);\n      res.status(500).json({ message: 'Error registering business user', error: err });\n    } else {\n      res.status(201).json({ message: 'Business user registered successfully' });\n    }\n  });\n});\n\nmodule.exports = router;\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAC/B,MAAMC,EAAE,GAAGH,OAAO,CAAC,cAAc,CAAC;;AAElC;AACAC,MAAM,CAACG,IAAI,CAAC,UAAU,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACpC,MAAM;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAGH,GAAG,CAACI,IAAI;EACvC,MAAMC,KAAK,GAAG,8DAA8D;EAC5EP,EAAE,CAACO,KAAK,CAACA,KAAK,EAAE,CAACH,QAAQ,EAAEC,QAAQ,CAAC,EAAE,CAACG,GAAG,EAAEC,OAAO,KAAK;IACtD,IAAID,GAAG,EAAE;MACPE,OAAO,CAACC,KAAK,CAAC,iBAAiB,EAAEH,GAAG,CAAC;MACrCL,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE,gCAAgC;QAAEH,KAAK,EAAEH;MAAI,CAAC,CAAC;IACjF,CAAC,MAAM;MACLL,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAAuC,CAAC,CAAC;IAC3E;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AACAhB,MAAM,CAACG,IAAI,CAAC,WAAW,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACrC,MAAM;IAAEY,YAAY;IAAEX,QAAQ;IAAEC;EAAS,CAAC,GAAGH,GAAG,CAACI,IAAI;EACrD,MAAMC,KAAK,GAAG,gFAAgF;EAC9FP,EAAE,CAACO,KAAK,CAACA,KAAK,EAAE,CAACQ,YAAY,EAAEX,QAAQ,EAAEC,QAAQ,CAAC,EAAE,CAACG,GAAG,EAAEC,OAAO,KAAK;IACpE,IAAID,GAAG,EAAE;MACPE,OAAO,CAACC,KAAK,CAAC,iBAAiB,EAAEH,GAAG,CAAC;MACrCL,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE,iCAAiC;QAAEH,KAAK,EAAEH;MAAI,CAAC,CAAC;IAClF,CAAC,MAAM;MACLL,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAAwC,CAAC,CAAC;IAC5E;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFE,MAAM,CAACC,OAAO,GAAGnB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}