{"ast":null,"code":"export const handleSelectSlot = (start, setSelectedDate, setBookingStatus, setShowModal, userType) => {\n  const now = new Date();\n  if (userType === \"business\") {\n    alert(\"Business users cannot book dates.\");\n    return;\n  }\n  if (!userType) {\n    alert(\"You have to sign in first to book a date!\");\n    return;\n  }\n  if (start <= now) {\n    alert(\"Please select a future date.\");\n    return;\n  }\n  setSelectedDate(start);\n  const selectedDateString = start.toISOString().split(\"T\")[0];\n  fetch(`/api/profile/business/bookings/check/${localStorage.getItem('userId')}/${selectedDateString}`).then(response => response.json()).then(data => {\n    if (!Array.isArray(data.bookedSlots)) {\n      console.error(\"Invalid response:\", data);\n      return;\n    }\n    setBookingStatus(data.bookedSlots);\n    setShowModal(true);\n  }).catch(error => {\n    console.error(\"Error checking booking status:\", error.message);\n    alert(\"Error checking booking status. Please try again later.\");\n  });\n};","map":{"version":3,"names":["handleSelectSlot","start","setSelectedDate","setBookingStatus","setShowModal","userType","now","Date","alert","selectedDateString","toISOString","split","fetch","localStorage","getItem","then","response","json","data","Array","isArray","bookedSlots","console","error","catch","message"],"sources":["C:/Users/Admin/Downloads/React_Node_Sql_Path2-main/React_Node_Sql_Path2-main/fe/src/components/Dates/handleBookingSubmission.js"],"sourcesContent":["export const handleSelectSlot = (start, setSelectedDate, setBookingStatus, setShowModal, userType) => {\n  const now = new Date();\n  if (userType === \"business\") {\n    alert(\"Business users cannot book dates.\");\n    return;\n  }\n  if (!userType) {\n    alert(\"You have to sign in first to book a date!\");\n    return;\n  }\n  if (start <= now) {\n    alert(\"Please select a future date.\");\n    return;\n  }\n  setSelectedDate(start);\n  const selectedDateString = start.toISOString().split(\"T\")[0];\n\n  fetch(`/api/profile/business/bookings/check/${localStorage.getItem('userId')}/${selectedDateString}`)\n    .then(response => response.json())\n    .then(data => {\n      if (!Array.isArray(data.bookedSlots)) {\n        console.error(\"Invalid response:\", data);\n        return;\n      }\n      setBookingStatus(data.bookedSlots);\n      setShowModal(true);\n    })\n    .catch(error => {\n      console.error(\"Error checking booking status:\", error.message);\n      alert(\"Error checking booking status. Please try again later.\");\n    });\n};\n"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,eAAe,EAAEC,gBAAgB,EAAEC,YAAY,EAAEC,QAAQ,KAAK;EACpG,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;EACtB,IAAIF,QAAQ,KAAK,UAAU,EAAE;IAC3BG,KAAK,CAAC,mCAAmC,CAAC;IAC1C;EACF;EACA,IAAI,CAACH,QAAQ,EAAE;IACbG,KAAK,CAAC,2CAA2C,CAAC;IAClD;EACF;EACA,IAAIP,KAAK,IAAIK,GAAG,EAAE;IAChBE,KAAK,CAAC,8BAA8B,CAAC;IACrC;EACF;EACAN,eAAe,CAACD,KAAK,CAAC;EACtB,MAAMQ,kBAAkB,GAAGR,KAAK,CAACS,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAE5DC,KAAK,CAAE,wCAAuCC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAE,IAAGL,kBAAmB,EAAC,CAAC,CAClGM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;IACZ,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,IAAI,CAACG,WAAW,CAAC,EAAE;MACpCC,OAAO,CAACC,KAAK,CAAC,mBAAmB,EAAEL,IAAI,CAAC;MACxC;IACF;IACAf,gBAAgB,CAACe,IAAI,CAACG,WAAW,CAAC;IAClCjB,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC,CAAC,CACDoB,KAAK,CAACD,KAAK,IAAI;IACdD,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC9DjB,KAAK,CAAC,wDAAwD,CAAC;EACjE,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}